[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Branded Websites, Presentations, Dashboards, and PDFs with Quarto",
    "section": "",
    "text": "üóìÔ∏è Date: 2025-09-16",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Branded Websites, Presentations, Dashboards, and PDFs with Quarto",
    "section": "Overview",
    "text": "Overview\nJoin us for a hands-on, one-day workshop at posit::conf(2025), where we‚Äôll explore the versatility of Quarto output formats. Designed for data scientists, analysts, and content creators, this immersive session will teach you how to craft cohesive reports and presentations while refining your workflow with Quarto‚Äôs latest features.\nYou will learn how to create dynamic websites, professional PDF documents, engaging presentations, and interactive dashboards using Quarto. This workshop highlights Quarto‚Äôs powerful theming capabilities, including the new support for brand.yml, which ensures that your work maintains a professional and cohesive style across all formats.\nBy the end of the session, you‚Äôll be equipped to:\n\nBuild and deploy Quarto websites.\nGenerate professional presentations and PDF reports.\nCreate interactive dashboards for data visualization and reporting.\nUse brand.yml to define and apply consistent theming across all outputs.\n\nWhether you‚Äôre looking to enhance your personal projects or streamline organizational outputs, this workshop will equip you with the tools to create polished, professional results.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Branded Websites, Presentations, Dashboards, and PDFs with Quarto",
    "section": "Schedule",
    "text": "Schedule\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 10:30\nIntro to Quarto & brand.yml\n\n\n10:30 - 11:00\nCoffee break\n\n\n11:00 - 12:30\nPresentations & Dashboards\n\n\n12:30 - 13:30\nLunch break\n\n\n13:30 - 15:00\nPDFs & Websites\n\n\n15:00 - 15:30\nCoffee break\n\n\n15:30 - 17:00\nCustomizing your brand",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Branded Websites, Presentations, Dashboards, and PDFs with Quarto",
    "section": "Instructors",
    "text": "Instructors\nIsabella Vel√°squez is a Senior Product Marketing Manager at Posit Software, where she develops strategic content to increase brand visibility and drive product adoption. She has a background in data analysis, reporting, and visualization and holds an MS in Analytics and a BA in Economics and East Asian Languages and Civilizations from the University of Chicago.\nSara Altman is a Data Science Educator at Posit on the Developer Relations team. She creates technical content to help developers and data scientists achieve their goals with Posit tools. Prior to joining the Developer Relations team, she worked on Posit Academy, Posit‚Äôs educational platform. Before Posit, Sara taught data science and R at Stanford. She holds a MS and BS in Symbolic Systems from Stanford.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "materials/02-presentations/exercise-02.html",
    "href": "materials/02-presentations/exercise-02.html",
    "title": "",
    "section": "",
    "text": "Add {.smaller} to your heading to decrease its font size, like this: ## Global Happiness Trends {.smaller}.\nPlace your plot and table side-by-side. Adjust the percentages as needed.\nUse ::: panel-tabset on the ‚ÄúCountry-Level Analysis‚Äù slide to organize your content.\nTo improve the flow, add slide-transition: slide to your YAML header. Other options include fade, convex, concave, or zoom."
  },
  {
    "objectID": "materials/02-presentations/index.html",
    "href": "materials/02-presentations/index.html",
    "title": "Presentations",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Presentations"
    ]
  },
  {
    "objectID": "materials/02-presentations/index.html#slides",
    "href": "materials/02-presentations/index.html#slides",
    "title": "Presentations",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Presentations"
    ]
  },
  {
    "objectID": "materials/02-presentations/index.html#exercises",
    "href": "materials/02-presentations/index.html#exercises",
    "title": "Presentations",
    "section": "Exercises",
    "text": "Exercises\n\nExercise 1\n\nIn your document‚Äôs YAML header, change format: html to format: revealjs.\nUse first-level headings (#) to create a new slide. Use other Markdown headings and text for content on each slide.\nSave and render your document.\n\nQuarto will create an HTML file that is a fully functional slide deck.\n\n\n\n\n\n\nNote\n\n\n\nYou can remove code-fold and code-summary from the YAML header, as these are for HTML documents and do not apply to presentations.\n\n\n\n\nExercise 2\n\nAdd {.smaller} to your heading to decrease its font size, like this: ## Global Happiness Trends {.smaller}.\nPlace your plot and table side-by-side. Adjust the percentages as needed.\nUse ::: panel-tabset on the ‚ÄúCountry-Level Analysis‚Äù slide to organize your content.\nTo improve the flow, add slide-transition: slide to your YAML header. Other options include fade, convex, concave, or zoom.\n\n\n\nExercise 3\n\nChange the title slide background.\n\nFind an image on Unsplash and get the direct URL to the image file.\nAdd title-slide-attributes to your YAML header and specify the data-background-image attribute with the image‚Äôs URL.\nIf it‚Äôs a dark photo, you may want to change data-background-color to a dark color so that the slide uses a light font color.\n\nEdit Conclusion slide background color: Use the brand.yml shortcodes to change the color to primary.",
    "crumbs": [
      "Presentations"
    ]
  },
  {
    "objectID": "materials/07-customization/index.html",
    "href": "materials/07-customization/index.html",
    "title": "Websites",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Customization"
    ]
  },
  {
    "objectID": "materials/07-customization/index.html#slides",
    "href": "materials/07-customization/index.html#slides",
    "title": "Websites",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Customization"
    ]
  },
  {
    "objectID": "materials/01-intro/exercise-01.html",
    "href": "materials/01-intro/exercise-01.html",
    "title": "",
    "section": "",
    "text": "Open 01-exercise-r.qmd or 01-exercise-py.qmd.\nPreview/render the document.\n\nPosit Cloud: You may be asked to allow pop-ups.\n\nEdit the title and preview/render again."
  },
  {
    "objectID": "materials/01-intro/exercise-03.html",
    "href": "materials/01-intro/exercise-03.html",
    "title": "",
    "section": "",
    "text": "Add an important callout box to the introduction summarizing the report‚Äôs findings.\nIn the first paragraph, link to the World Happiness Report website (https://www.worldhappiness.report/) where it says ‚Äú2025 World Happiness Report‚Äù.\nChange some text to the color \"#eb068c\"."
  },
  {
    "objectID": "materials/01-intro/exercise-04.html",
    "href": "materials/01-intro/exercise-04.html",
    "title": "",
    "section": "",
    "text": "In the workshop repo, there‚Äôs a file named 04-exercise.yml. Rename the file to _brand.yml and rerender your Quarto document. What changes?\nChange some of the variables in the _brand.yml file and rerender to see how your theme changes. You can reset the file by copying and pasting it from here."
  },
  {
    "objectID": "materials/01-intro/index.html",
    "href": "materials/01-intro/index.html",
    "title": "Quarto Documents",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Intro to Quarto"
    ]
  },
  {
    "objectID": "materials/01-intro/index.html#slides",
    "href": "materials/01-intro/index.html#slides",
    "title": "Quarto Documents",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Intro to Quarto"
    ]
  },
  {
    "objectID": "materials/01-intro/index.html#exercises",
    "href": "materials/01-intro/index.html#exercises",
    "title": "Quarto Documents",
    "section": "Exercises",
    "text": "Exercises\n\nExercise 1\n\nOpen 01-exercise-r.qmd or 01-exercise-py.qmd.\nPreview/render the document.\n\nPosit Cloud: You may be asked to allow pop-ups.\n\nEdit the title and preview/render again.\n\n\n\nExercise 2\n\nOpen 01-exercise-r.qmd and run the first three code chunks (in order).\nPreview the file.\nAdd a #| include: false chunk option to the second chunk (global-trends). Preview the file and note the differences.\nIn the YAML, add an author field and add your name. Preview the file.\nChange code-fold to be true. Preview the file.\nEdit the first paragraph to (1) make something bold by surrounding the text with ** and (2) use inline code instead of hardcoded values for the number of countries. You can use the following code to calculate the number of countries.\n\n\nRPython\n\n\n\nlength(unique(whr$country_name))\n\n\n\n\nwhr['country_name'].nunique()\n\n\n\n\n\n\nExercise 3\n\nAdd an important callout box to the introduction summarizing the report‚Äôs findings.\nIn the first paragraph, link to the World Happiness Report website (https://www.worldhappiness.report/) where it says ‚Äú2025 World Happiness Report‚Äù.\nChange some text to the color \"#eb068c\".\n\n\n\nExercise 4\n\nIn the workshop repo, there‚Äôs a file named 04-exercise.yml. Rename the file to _brand.yml and rerender your Quarto document. What changes?\nChange some of the variables in the _brand.yml file and rerender to see how your theme changes. You can reset the file by copying and pasting it from here.\n\n\n\nExercise 5\n\nRPython\n\n\n\nIn the first code chunk of 01-exercise-r.qmd, replace theme_minimal() with theme_brand_ggplot2(). You will need to supply a brand file path (\"_brand.yml\").\nRe-render and see what changes.\n\n\n\n\nIn the first code chunk of 01-exercise-python.qmd, add theme_brand_plotnine() right after theme_minimal(). You will need to supply a brand file path (\"_brand.yml\").\nRe-render. Does anything change? What if you change foreground in _brand.yml to hot-pink? Re-render with and without theme_brand_plotnine().\n\n\n\n\n\n\nExercise 6\n\nRead in _brand.yml with read_brand_yml() (R) or Brand.from_yaml() (Python) to a variable named brand.\nChange the color of the points and line in the global trends plot to the brand‚Äôs teal color. Use code like the following.\n\n(Make sure to first remove #| include: false from the chunk, if it‚Äôs still there).\n\nRPython\n\n\n\ngeom_line(color = brand$color$palette$blue)\n\n\n\n\ngeom_line(color = brand.color.palette.blue)",
    "crumbs": [
      "Intro to Quarto"
    ]
  },
  {
    "objectID": "materials/05-websites/exercise-01.html",
    "href": "materials/05-websites/exercise-01.html",
    "title": "",
    "section": "",
    "text": "Get the starter template. If you‚Äôre using Posit Cloud, skip this step and instead open the whr-website project. If you‚Äôre using Codespaces, follow the instructions here, but go to this repo instead.\nOpen index.qmd and click Render/Preview.\nEdit title index.qmd YAML to better reflect the site and add a subtitle. Preview.\nAdd some text to index.qmd explaining the plot. Preview."
  },
  {
    "objectID": "materials/05-websites/exercise-03.html",
    "href": "materials/05-websites/exercise-03.html",
    "title": "",
    "section": "",
    "text": "Publish your website to Quarto Pub.\n\nFrom the Terminal, run quarto publish, then select Quarto Pub.\nFollow the prompts to set up an account and publish.\n\nIf you have time, publish to Connect Cloud. Note: if you‚Äôre using R, you will need an renv.lock file (learn how here) if publishing from Positron or VS Code, or a manifest.json file (learn how here) if publishing from GitHub."
  },
  {
    "objectID": "materials/05-websites/slides.html#basic-website",
    "href": "materials/05-websites/slides.html#basic-website",
    "title": "QuartoWebsites",
    "section": "Basic website",
    "text": "Basic website"
  },
  {
    "objectID": "materials/05-websites/slides.html#lets-dive-right-in",
    "href": "materials/05-websites/slides.html#lets-dive-right-in",
    "title": "QuartoWebsites",
    "section": "Let‚Äôs dive right in!",
    "text": "Let‚Äôs dive right in!\n\nhttps://unsplash.com/@noaa\n\n\nWe‚Äôre going to temporarily leave our work in quarto-brand-exercises and create a new folder for our website."
  },
  {
    "objectID": "materials/05-websites/slides.html#get-the-template",
    "href": "materials/05-websites/slides.html#get-the-template",
    "title": "QuartoWebsites",
    "section": "Get the template",
    "text": "Get the template\n\nStart somewhere logical:\n\n\n\nTerminal\n\ncd ~/Documents\n\n\nGet the website template:\n\n\n\nTerminal\n\nquarto use template skaltman/whr-website-template\n\n\n\nYou can also git clone or download from GitHub: github.com/skaltman/whr-website-template"
  },
  {
    "objectID": "materials/05-websites/slides.html#get-the-template-1",
    "href": "materials/05-websites/slides.html#get-the-template-1",
    "title": "QuartoWebsites",
    "section": "Get the template",
    "text": "Get the template\n\nFollow the prompts:\n\n\n\nTerminal\n\nQuarto templates may execute code when documents are rendered. If you do not \ntrust the authors of the template, we recommend that you do not install or \nuse the template.\n? Do you trust the authors of this template (Y/n) ‚Ä∫ Y\n? Create a subdirectory for template? (Y/n) ‚Ä∫ Y\n? Directory name: ‚Ä∫ website\n\n\nOpen the folder:\nRStudio: New Project &gt; Existing Directory &gt;\nVS Code: File &gt; Open Folder &gt;\nOpen index.qmd"
  },
  {
    "objectID": "materials/05-websites/slides.html#workflow",
    "href": "materials/05-websites/slides.html#workflow",
    "title": "QuartoWebsites",
    "section": "Workflow",
    "text": "Workflow\n\nPreview. Edit. Save. Preview."
  },
  {
    "objectID": "materials/05-websites/slides.html#preview",
    "href": "materials/05-websites/slides.html#preview",
    "title": "QuartoWebsites",
    "section": "Preview",
    "text": "Preview\n\nRStudioVS Code/PositronTerminal\n\n\n\n\nCurrent page\n\nCmd/Ctrl + Shift + K\n\nWhole site\nBuild &gt; Render Website\n\n\n\n\n\n\nCurrent page\n\nCmd/Ctrl + Shift + K\n\nWhole site\nUse Terminal:\n\n\nTerminal\n\nquarto preview \n\n\nRequires Quarto Extension\n\n\n\n\nCurrent page\n\n\nTerminal\n\nquarto preview index.qmd\n\n\nWhole site\n\n\nTerminal\n\nquarto preview"
  },
  {
    "objectID": "materials/05-websites/slides.html#your-turn",
    "href": "materials/05-websites/slides.html#your-turn",
    "title": "QuartoWebsites",
    "section": "Your turn",
    "text": "Your turn\n\nGet the starter template. If you‚Äôre using Posit Cloud, skip this step and instead open the whr-website project. If you‚Äôre using Codespaces, follow the instructions here, but go to this repo instead.\nOpen index.qmd and click Render/Preview.\nEdit title index.qmd YAML to better reflect the site and add a subtitle. Preview.\nAdd some text to index.qmd explaining the plot. Preview.\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/05-websites/slides.html#page-structure",
    "href": "materials/05-websites/slides.html#page-structure",
    "title": "QuartoWebsites",
    "section": "Page Structure",
    "text": "Page Structure\n\n\n\n\nindex.qmd\n\n---\ntitle: \"Global Happiness\"\nexecute:\n  echo: false\n  warning: false\n  message: false\n---\n\nData from: [World Happiness Report](https://www.worldhappiness.report/).\n\n```{r}\n#| label: setup\nlibrary(tidyverse)\nlibrary(quarto)\nlibrary(brand.yml)\n\nwhr &lt;- read_csv(here::here(\"data/whr.csv\"))\n\nbrand &lt;- read_brand_yml(\"_brand.yml\")\n\ntheme_whr &lt;-\n  theme_brand_ggplot2(\"_brand.yml\") +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12)\n  ) \n```\n\n\nWebpages are like any other Quarto document:\n\nStart with a YAML header\nCan include code cells\nEverything else is markdown content"
  },
  {
    "objectID": "materials/05-websites/slides.html#website-structure",
    "href": "materials/05-websites/slides.html#website-structure",
    "title": "QuartoWebsites",
    "section": "Website Structure",
    "text": "Website Structure\nA minimal website has two files: index.qmd and _quarto.yml\n\nindex.qmd: Renders to index.html, your home page.\n_quarto.yml: Controls project and website properties.\n\nWhen rendered you will get a _site/ folder. This contains everything needed to serve the site."
  },
  {
    "objectID": "materials/05-websites/slides.html#quarto.yml",
    "href": "materials/05-websites/slides.html#quarto.yml",
    "title": "QuartoWebsites",
    "section": "_quarto.yml",
    "text": "_quarto.yml\n\n\n_quarto.yml\n\nproject:\n  type: website\n\nwebsite:\n  title: \"whr-website\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n\nformat:\n  html:\n    toc: true"
  },
  {
    "objectID": "materials/05-websites/slides.html#quarto-projects",
    "href": "materials/05-websites/slides.html#quarto-projects",
    "title": "QuartoWebsites",
    "section": "Quarto projects",
    "text": "Quarto projects\nOur website is a Quarto project.\nAll Quarto projects include a _quarto.yml file.\n\n\nThis is a Quarto Project.\nmy-folder/\n‚îú‚îÄ‚îÄ _quarto.yml\n‚îú‚îÄ‚îÄ my-document.qmd\n\nThis is not.\nmy-folder/\n‚îú‚îÄ‚îÄ my-document.qmd"
  },
  {
    "objectID": "materials/05-websites/slides.html#quarto-projects-1",
    "href": "materials/05-websites/slides.html#quarto-projects-1",
    "title": "QuartoWebsites",
    "section": "Quarto projects",
    "text": "Quarto projects\nA Quarto project is a directory that provides:\n\nA way to render all or some of the files in a directory with a single command (e.g.¬†quarto render myproject).\nA way to share YAML configuration across multiple documents."
  },
  {
    "objectID": "materials/05-websites/slides.html#section",
    "href": "materials/05-websites/slides.html#section",
    "title": "QuartoWebsites",
    "section": "",
    "text": "Why didn‚Äôt we need this before?\n\nOnly some Quarto outputs require a Quarto project, including:\n\nwebsites\nbooks\nblogs"
  },
  {
    "objectID": "materials/05-websites/slides.html#navigation",
    "href": "materials/05-websites/slides.html#navigation",
    "title": "QuartoWebsites",
    "section": "Navigation",
    "text": "Navigation"
  },
  {
    "objectID": "materials/05-websites/slides.html#navbar",
    "href": "materials/05-websites/slides.html#navbar",
    "title": "QuartoWebsites",
    "section": "Navbar",
    "text": "Navbar\n\n\n\n\n_quarto.yml\n\nproject:\n  type: website\n\nwebsite:\n  title: \"whr-website\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n\nformat:\n  html:\n    toc: true"
  },
  {
    "objectID": "materials/05-websites/slides.html#navbar---add-a-page",
    "href": "materials/05-websites/slides.html#navbar---add-a-page",
    "title": "QuartoWebsites",
    "section": "Navbar - add a page",
    "text": "Navbar - add a page\n\n\n\n\n_quarto.yml\n\nproject:\n  type: website\n\nwebsite:\n  title: \"whr-website\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - href: new-page.qmd\n        text: New page\n\nformat:\n  html:\n    toc: true"
  },
  {
    "objectID": "materials/05-websites/slides.html#your-turn-1",
    "href": "materials/05-websites/slides.html#your-turn-1",
    "title": "QuartoWebsites",
    "section": "Your turn",
    "text": "Your turn\n\nAdd some information to about.qmd.\nEdit _quarto.yml so that the navbar includes the about page.\nHow do you think you change the position of the links in the navbar? Change them to appear on the right.\n\n\n\n\n‚àí+\n04:00"
  },
  {
    "objectID": "materials/05-websites/slides.html#theres-much-more",
    "href": "materials/05-websites/slides.html#theres-much-more",
    "title": "QuartoWebsites",
    "section": "There‚Äôs much more!",
    "text": "There‚Äôs much more!\nThere are many more options for site navigation, including\n\nSide navigation\nNavbar tools (e.g., view source on GitHub)\nNavigational breadcrumbs\n\n\nLearn more: https://quarto.org/docs/websites/website-navigation.html"
  },
  {
    "objectID": "materials/05-websites/slides.html#theming",
    "href": "materials/05-websites/slides.html#theming",
    "title": "QuartoWebsites",
    "section": "Theming",
    "text": "Theming\n\nPhoto by Daniele Levis Pelusi on Unsplash"
  },
  {
    "objectID": "materials/05-websites/slides.html#built-in-theme",
    "href": "materials/05-websites/slides.html#built-in-theme",
    "title": "QuartoWebsites",
    "section": "Built-in theme",
    "text": "Built-in theme\nLike regular HTML documents and dashboards, you can use a built-in Bootswatch theme.\n\n\n_quarto.yml\n\nproject:\n  type: website\n\nwebsite:\n  title: \"whr-website\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n\nformat:\n  html:\n    toc: true\n    theme: cerulean\n\n\nLearn more: https://quarto.org/docs/output-formats/html-themes.html"
  },
  {
    "objectID": "materials/05-websites/slides.html#style-in-_quarto.yml",
    "href": "materials/05-websites/slides.html#style-in-_quarto.yml",
    "title": "QuartoWebsites",
    "section": "Style in _quarto.yml",
    "text": "Style in _quarto.yml\nControl basic options like colors and fonts in _quarto.yml.\n\n\n_quarto.yml\n\nproject:\n  type: website\n\nwebsite:\n  title: \"whr-website\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n\nformat:\n  html:\n    toc: true\n    fontcolor: \"blue\"\n    backgroundcolor: \"white\"\n\n\nLearn more: https://quarto.org/docs/output-formats/html-themes.html"
  },
  {
    "objectID": "materials/05-websites/slides.html#or",
    "href": "materials/05-websites/slides.html#or",
    "title": "QuartoWebsites",
    "section": "Or‚Ä¶",
    "text": "Or‚Ä¶"
  },
  {
    "objectID": "materials/05-websites/slides.html#deployment",
    "href": "materials/05-websites/slides.html#deployment",
    "title": "QuartoWebsites",
    "section": "Deployment",
    "text": "Deployment\n\nPhoto by engin akyurt on Unsplash"
  },
  {
    "objectID": "materials/05-websites/slides.html#publishing-options",
    "href": "materials/05-websites/slides.html#publishing-options",
    "title": "QuartoWebsites",
    "section": "Publishing options",
    "text": "Publishing options\nThere are a variety of ways to publish Quarto documents, presentations, dashboards, and websites.\n\nPosit Connect Cloud\nGitHub Pages\nQuarto Pub\nPosit Connect\n\n\nLearn more: https://quarto.org/docs/publishing/"
  },
  {
    "objectID": "materials/05-websites/slides.html#posit-connect-cloud",
    "href": "materials/05-websites/slides.html#posit-connect-cloud",
    "title": "QuartoWebsites",
    "section": "Posit Connect Cloud",
    "text": "Posit Connect Cloud\n\nhttps://connect.posit.cloud/\nEasily publish and share data applications and documents in a cloud environment within minutes."
  },
  {
    "objectID": "materials/05-websites/slides.html#posit-connect-cloud-1",
    "href": "materials/05-websites/slides.html#posit-connect-cloud-1",
    "title": "QuartoWebsites",
    "section": "Posit Connect Cloud",
    "text": "Posit Connect Cloud\nPublish from:\n\nGitHub\nPositron with the Publisher extension\nVS Code with the Publisher extension"
  },
  {
    "objectID": "materials/05-websites/slides.html#posit-connect-cloud-2",
    "href": "materials/05-websites/slides.html#posit-connect-cloud-2",
    "title": "QuartoWebsites",
    "section": "Posit Connect Cloud",
    "text": "Posit Connect Cloud"
  },
  {
    "objectID": "materials/05-websites/slides.html#quarto-pub",
    "href": "materials/05-websites/slides.html#quarto-pub",
    "title": "QuartoWebsites",
    "section": "Quarto Pub",
    "text": "Quarto Pub\nFree publishing service for static content created with Quarto.\n\nLearn more: https://quarto.org/docs/publishing/quarto-pub.html"
  },
  {
    "objectID": "materials/05-websites/slides.html#quarto-pub-1",
    "href": "materials/05-websites/slides.html#quarto-pub-1",
    "title": "QuartoWebsites",
    "section": "Quarto Pub",
    "text": "Quarto Pub\nEasiest option for today. https://quartopub.com/.\n\nRun\n\n\n\nTerminal\n\nquarto publish\n\n\nSelect Quarto Pub.\n\n\nLearn more: https://quarto.org/docs/publishing/quarto-pub.html"
  },
  {
    "objectID": "materials/05-websites/slides.html#your-turn-2",
    "href": "materials/05-websites/slides.html#your-turn-2",
    "title": "QuartoWebsites",
    "section": "Your turn",
    "text": "Your turn\nPublish your website to Quarto Pub.\n\nFrom the Terminal, run quarto publish, then select Quarto Pub.\nFollow the prompts to set up an account and publish.\n\nIf you have time, publish to Connect Cloud. Note: if you‚Äôre using R, you will need an renv.lock file (learn how here) if publishing from Positron or VS Code, or a manifest.json file (learn how here) if publishing from GitHub.\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "materials/05-websites/slides.html#making-a-website-from-scratch",
    "href": "materials/05-websites/slides.html#making-a-website-from-scratch",
    "title": "QuartoWebsites",
    "section": "Making a website from scratch",
    "text": "Making a website from scratch\nQuick start guide\n\n\nTerminal\n\nquarto create project website mysite\n\n\nLearn more: https://quarto.org/docs/websites/"
  },
  {
    "objectID": "materials/06-byob/index.html",
    "href": "materials/06-byob/index.html",
    "title": "Creating and sharing your brand",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Creating and Sharing"
    ]
  },
  {
    "objectID": "materials/06-byob/index.html#slides",
    "href": "materials/06-byob/index.html#slides",
    "title": "Creating and sharing your brand",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Creating and Sharing"
    ]
  },
  {
    "objectID": "materials/06-byob/index.html#exercises",
    "href": "materials/06-byob/index.html#exercises",
    "title": "Creating and sharing your brand",
    "section": "Exercises",
    "text": "Exercises\n\nExercise 1\nCreate a brand file for your organization using the Brand Extension.\n\nOpen your Terminal and run: quarto create extension brand\nRead about how to prompt a large language model (LLM) to create a _brand.yml file: posit-dev.github.io/brand-yml/articles/llm-brand-yml-prompt\nCustomize the default _extensions/mybrand/brand.yml file. Take note of how well the output incorporates your brand and what, if any, elements are missing or need to be adjusted.\n\nPreview by running quarto preview example.qmd in the Terminal.\n\n\nWe‚Äôd love for you to add your new brand.yml file to the Inspiration page! You can see examples and contribute your own by visiting the following links:\n\nInspiration page: posit-dev.github.io/brand-yml/inspiration\nSubmit a PR: github.com/posit-dev/brand-yml/issues",
    "crumbs": [
      "Creating and Sharing"
    ]
  },
  {
    "objectID": "materials/04-typst/exercise-01.html",
    "href": "materials/04-typst/exercise-01.html",
    "title": "",
    "section": "",
    "text": "In your document‚Äôs YAML header, change the format option from its current value (e.g., html) to typst.\nChange the number of columns used for the page content to 2 using columns.\nAdd a block to a section of the text and fill it with the tertiary color."
  },
  {
    "objectID": "materials/04-typst/index.html",
    "href": "materials/04-typst/index.html",
    "title": "PDFs",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "PDFs"
    ]
  },
  {
    "objectID": "materials/04-typst/index.html#slides",
    "href": "materials/04-typst/index.html#slides",
    "title": "PDFs",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "PDFs"
    ]
  },
  {
    "objectID": "materials/04-typst/index.html#exercises",
    "href": "materials/04-typst/index.html#exercises",
    "title": "PDFs",
    "section": "Exercises",
    "text": "Exercises\n\nExercise 1\n\nIn your document‚Äôs YAML header, change the format option from its current value (e.g., html) to typst.\nChange the number of columns used for the page content to 2 using columns.\nAdd a block to a section of the text and fill it with the tertiary color.\n\n\n\nExercise 2\nInstall the whr-typst-template:\n\n\nTerminal\n\nquarto use template ivelasq/whr-typst-template\n\nOpen the _extensions/whr/typst-show.typ and _extensions/whr/typst-template.typ files to examine their contents.",
    "crumbs": [
      "PDFs"
    ]
  },
  {
    "objectID": "materials/00-setup/index.html",
    "href": "materials/00-setup/index.html",
    "title": "Setup",
    "section": "",
    "text": "To follow along with the workshop exercises, you‚Äôll need Quarto version 1.8+ and access to a code editor that supports R or Python.\nWhile Quarto itself doesn‚Äôt require a programming language, the exercises will include code chunks in R or Python. If you don‚Äôt already have R or Python set up locally, we recommend using a cloud-based option like Posit Cloud (for R) or GitHub Codespaces (for Python).\n\nRecommended Setup Options\nOption 1: Posit Cloud (RStudio in the cloud)\n\nCreate a free account at https://posit.cloud/\nOpen the Posit Cloud project link: Posit Cloud link: https://posit.cloud/spaces/679626/join?access_code=VwU0N2fEy5wwQ8qHayo8TrTZRKcT6sndAF13AHlx\nClick ‚ÄúYes‚Äù to join the space.\nClick Content and select quarto-brand-exercises or go to https://posit.cloud/spaces/679626/content/10865885/\nTo save a copy of the project to your workspace, click ‚ÄúSave a permanent copy‚Äù.\n\nOption 2: GitHub Codespaces (VS Code in the browser)\n\nCreate a free account at https://github.com/\nGo to the GitHub repo: https://github.com/posit-dev/quarto-brand-codespaces/\nClick ‚ÄúUse this template‚Äù then ‚ÄúOpen in a codespace‚Äù.\n\nPlease note that loading the codespace will take several minutes.\nIf you are asked to install an extension called markdownlit, say ‚Äúyes‚Äù and trust the publisher.\n\nYou will need to following the ‚ÄúInstall the Necessary Packages‚Äù instructions below.\n\nCreate your virtual environment by selecting Python: Create Environment in the Command Palette.\nSelect your environment type (recommend Venv).\nChoose an interpreter path.\nSelect requirements.txt check box to install dependencies.\n\n\nOption 3: Local Installation\nChoose one editor and follow the steps:\n\nPositronRStudioVS Code\n\n\n\nDownload and install Positron: https://positron.posit.co/download.html/\nQuarto comes pre-installed.\n\nMake sure Quarto is version 1.8+.\n\n\n\n\n\nDownload and install RStudio: https://posit.co/downloads/\n\nMake sure RStudio is version 2022.07+.\n\nQuarto comes pre-installed.\n\nMake sure Quarto is version 1.8+.\n\n\n\n\n\nDownload and install VS Code: https://code.visualstudio.com/download/\nDownload and install Quarto: https://quarto.org/docs/get-started/\nInstall the following extensions:\n\nQuarto Extension: https://marketplace.visualstudio.com/items?itemName=quarto.quarto/\nJupyter Extension: https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter/\n\n\n\n\n\n\n\nAccessing the Workshop Materials\nIf you are using a cloud-based option, the files will be included in the project folder.\nIf you are not using a cloud-based option:\nIf you use Git/GitHub:\n\nClone the repository with Git:\n\ngit clone https://github.com/posit-dev/quarto-brand-exercises.git\nIf you don‚Äôt use Git/GitHub:\n\nGo to the GitHub repo: https://github.com/posit-dev/quarto-brand-exercises/\nClick the green ‚ÄúCode‚Äù button ‚Üí ‚ÄúDownload ZIP‚Äù.\nUnzip the folder and open it in your chosen editor.\n\n\n\nInstall the Necessary Packages\n\nRPython\n\n\nIf you are using Posit Cloud, the packages will be pre-installed. If you are using RStudio or Positron locally, install the packages by running:\nif (!require(\"pak\")) install.packages(\"pak\")\npak::pak(c(\"tidyverse\", \"quarto\", \"patchwork\", \"posit-dev/brand-yml/pkg-r\"))\n\n\n\nCreate your virtual environment by selecting Python: Create Environment in the Command Palette.\nSelect your environment type (recommend Venv).\nChoose an interpreter path.\nSelect requirements.txt check box to install dependencies.",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "materials/03-dashboards/exercise-02.html",
    "href": "materials/03-dashboards/exercise-02.html",
    "title": "",
    "section": "",
    "text": "Change the layout of your dashboard so that it looks like this:"
  },
  {
    "objectID": "materials/03-dashboards/exercise-04.html",
    "href": "materials/03-dashboards/exercise-04.html",
    "title": "",
    "section": "",
    "text": "Add two value boxes to your dashboard, above the tabset, so that your dashboard looks like this:\n\n\n\n\n\nUse the brand colors. You can either hard-code the value box values (‚ÄúFinland‚Äù and ‚ÄúSocial support‚Äù) or calculate them using the data."
  },
  {
    "objectID": "materials/03-dashboards/index.html",
    "href": "materials/03-dashboards/index.html",
    "title": "Dashboards",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Dashboards"
    ]
  },
  {
    "objectID": "materials/03-dashboards/index.html#slides",
    "href": "materials/03-dashboards/index.html#slides",
    "title": "Dashboards",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Dashboards"
    ]
  },
  {
    "objectID": "materials/03-dashboards/index.html#exercises",
    "href": "materials/03-dashboards/index.html#exercises",
    "title": "Dashboards",
    "section": "Exercises",
    "text": "Exercises\n\nExercise 1\n\nOpen dashboard-r.qmd or dashboard-python.qmd.\nChange the format from html to dashboard.\nRe-render.\nAdd relevant titles to each card.\n\nThe brand.yml file should be automatically applied!\n\n\nExercise 2\nChange the layout of your dashboard so that it looks like this:\n\n\n\n\n\n\n\nExercise 3\n\nTake a look at the Tabsets documentation on the Quarto website.\nMove the plots showing the countries that increased and decreased in happiness into a tabset. Your dashboard should then look like this:\n\n\n\n\n\n\n\n\nExercise 4\nAdd two value boxes to your dashboard, above the tabset, so that your dashboard looks like this:\n\n\n\n\n\nUse the brand colors. You can either hard-code the value box values (‚ÄúFinland‚Äù and ‚ÄúSocial support‚Äù) or calculate them using the data.",
    "crumbs": [
      "Dashboards"
    ]
  },
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (‚ÄúPublic License‚Äù). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 ‚Äì Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter‚Äôs License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 ‚Äì Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor ‚Äì Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. __Additional offer from the Licensor ‚Äì Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter‚Äôs License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 ‚Äì License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter‚Äôs License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter‚Äôs License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter‚Äôs License You apply.\n\n\n\nSection 4 ‚Äì Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 ‚Äì Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 ‚Äì Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 ‚Äì Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.t stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 ‚Äì Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the ‚ÄúLicensor.‚Äù Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark ‚ÄúCreative Commons‚Äù or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#quarto-many-outputs",
    "href": "materials/03-dashboards/slides.html#quarto-many-outputs",
    "title": "QuartoDashboards",
    "section": "Quarto ‚ûù many outputs",
    "text": "Quarto ‚ûù many outputs\nWith Quarto you can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books, and more‚Ä¶\n\nexercises: 20 min lecture: 20 min"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#quarto-dashboards",
    "href": "materials/03-dashboards/slides.html#quarto-dashboards",
    "title": "QuartoDashboards",
    "section": "Quarto ‚ûù dashboards",
    "text": "Quarto ‚ûù dashboards"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#section",
    "href": "materials/03-dashboards/slides.html#section",
    "title": "QuartoDashboards",
    "section": "",
    "text": "rows and columns value boxes multiple pages"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#section-1",
    "href": "materials/03-dashboards/slides.html#section-1",
    "title": "QuartoDashboards",
    "section": "",
    "text": "sidebar"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#section-2",
    "href": "materials/03-dashboards/slides.html#section-2",
    "title": "QuartoDashboards",
    "section": "",
    "text": "interactive leaflet widget html widget"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#section-3",
    "href": "materials/03-dashboards/slides.html#section-3",
    "title": "QuartoDashboards",
    "section": "",
    "text": "uses shiny for python select island and penguins and distributions will change can see all these dashboards and their code on the quarto website under gallery"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#world-happiness-report-dashboard",
    "href": "materials/03-dashboards/slides.html#world-happiness-report-dashboard",
    "title": "QuartoDashboards",
    "section": "üåé World Happiness Report dashboard",
    "text": "üåé World Happiness Report dashboard\n\n\nWalk through Click link to interact with the dashboard yourself"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#notebook-dashboard",
    "href": "materials/03-dashboards/slides.html#notebook-dashboard",
    "title": "QuartoDashboards",
    "section": "Notebook ‚ûù Dashboard",
    "text": "Notebook ‚ûù Dashboard\n\n\n\nolympicdash.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: dashboard\n---\n\n# notebook content goes here...\n\n\n\nHow did we create this dashboard? One change to notebook format\nOnce you done that Many components you can add all components offered in ipynb or plain text qmd"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#cards",
    "href": "materials/03-dashboards/slides.html#cards",
    "title": "QuartoDashboards",
    "section": "Cards",
    "text": "Cards\nDashboards are composed of cards.\n\ncards are the basic building blocks of dashboards you often won‚Äôt need to manually define a card ‚Äì they will typically map to cells in your notebook that create plots, display data, display text, etc."
  },
  {
    "objectID": "materials/03-dashboards/slides.html#rows-and-columns",
    "href": "materials/03-dashboards/slides.html#rows-and-columns",
    "title": "QuartoDashboards",
    "section": "Rows and columns",
    "text": "Rows and columns\nCards are arranged into rows and columns.\n\n\n\n\n\n\n\n\n\n\n\n\nto organize content arrange into rows and columns"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#layouts",
    "href": "materials/03-dashboards/slides.html#layouts",
    "title": "QuartoDashboards",
    "section": "Layouts",
    "text": "Layouts\nPages, tabsets, and sidebars allow for more advanced layouts.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncan also control the general layout of the page with things like pages, tabsets, and sidebars talk about this in the next slide deck"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-by-step",
    "href": "materials/03-dashboards/slides.html#step-by-step",
    "title": "QuartoDashboards",
    "section": "Step-by-step",
    "text": "Step-by-step\nLet‚Äôs make a dashboard, step-by-step"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-1-format-dashboard",
    "href": "materials/03-dashboards/slides.html#step-1-format-dashboard",
    "title": "QuartoDashboards",
    "section": "Step 1: format: dashboard",
    "text": "Step 1: format: dashboard\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n\n\nfirst, need to add that format: dashboard line"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-2-add-a-card",
    "href": "materials/03-dashboards/slides.html#step-2-add-a-card",
    "title": "QuartoDashboards",
    "section": "Step 2: Add a card",
    "text": "Step 2: Add a card\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point\nfrom plotnine.data import mpg\n```\n\n```{python}\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n\n\ncards are the fundamental unit now, add a card creating a plot this is plotnine code see what it looks like"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-2-add-a-card-1",
    "href": "materials/03-dashboards/slides.html#step-2-add-a-card-1",
    "title": "QuartoDashboards",
    "section": "Step 2: Add a card",
    "text": "Step 2: Add a card\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point\nfrom plotnine.data import mpg\n```\n\n```{python}\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-3-add-another-card",
    "href": "materials/03-dashboards/slides.html#step-3-add-another-card",
    "title": "QuartoDashboards",
    "section": "Step 3: Add another card",
    "text": "Step 3: Add another card\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n```{python}\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n```{python}\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-3-add-another-card-1",
    "href": "materials/03-dashboards/slides.html#step-3-add-another-card-1",
    "title": "QuartoDashboards",
    "section": "Step 3: Add another card",
    "text": "Step 3: Add another card\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n```{python}\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n```{python}\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```\n\n\n\n\n\n\nwill appear below by default"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-4-add-titles-to-cards",
    "href": "materials/03-dashboards/slides.html#step-4-add-titles-to-cards",
    "title": "QuartoDashboards",
    "section": "Step 4: Add titles to cards",
    "text": "Step 4: Add titles to cards\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#step-4-add-titles-to-cards-1",
    "href": "materials/03-dashboards/slides.html#step-4-add-titles-to-cards-1",
    "title": "QuartoDashboards",
    "section": "Step 4: Add titles to cards",
    "text": "Step 4: Add titles to cards\n\nadd titles using the title option in the cell\n\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"My first Quarto dashboard\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#steps-1---4",
    "href": "materials/03-dashboards/slides.html#steps-1---4",
    "title": "QuartoDashboards",
    "section": "Steps 1 - 4",
    "text": "Steps 1 - 4\n\n\nnow have a dashboard"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#brand.yml-works-with-dashboards-too",
    "href": "materials/03-dashboards/slides.html#brand.yml-works-with-dashboards-too",
    "title": "QuartoDashboards",
    "section": "brand.yml works with dashboards too!",
    "text": "brand.yml works with dashboards too!"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#your-turn",
    "href": "materials/03-dashboards/slides.html#your-turn",
    "title": "QuartoDashboards",
    "section": "Your turn",
    "text": "Your turn\n\nOpen dashboard-r.qmd or dashboard-python.qmd.\nChange the format from html to dashboard.\nRe-render.\nAdd relevant titles to each card.\n\nThe brand.yml file should be automatically applied!\n\n\n\n‚àí+\n03:00"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#rows",
    "href": "materials/03-dashboards/slides.html#rows",
    "title": "QuartoDashboards",
    "section": "Rows",
    "text": "Rows\nBy default, cards are laid out in rows:\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n## Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```\n\n\n\nheading text isn‚Äôt required - the ## define a row just to help you get organized"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#rows-1",
    "href": "materials/03-dashboards/slides.html#rows-1",
    "title": "QuartoDashboards",
    "section": "Rows",
    "text": "Rows\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n## Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#rows-2",
    "href": "materials/03-dashboards/slides.html#rows-2",
    "title": "QuartoDashboards",
    "section": "Rows",
    "text": "Rows\nDefault value of orientation is rows:\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows\"\nformat: \n  dashboard:\n    orientation: rows\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n## Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#columns",
    "href": "materials/03-dashboards/slides.html#columns",
    "title": "QuartoDashboards",
    "section": "Columns",
    "text": "Columns\nSetting orientation to columns makes each ## indicate a column instead of a row:\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Columns\"\nformat: \n  dashboard:\n    orientation: columns\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n## Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#columns-1",
    "href": "materials/03-dashboards/slides.html#columns-1",
    "title": "QuartoDashboards",
    "section": "Columns",
    "text": "Columns\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Columns\"\nformat: \n  dashboard:\n    orientation: columns\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n## Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#rows-then-columns",
    "href": "materials/03-dashboards/slides.html#rows-then-columns",
    "title": "QuartoDashboards",
    "section": "Rows, then columns",
    "text": "Rows, then columns\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows, then columns\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Overview\n\n### \n\nThis dashboard summarizes an illuminating analysis of fuel economy of cars.\n\n### \n\nThis is a car.\n\n![](images/car.png){fig-alt=\"Illustration of a teal color car.\"}\n\n## Plots\n\n### Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n### Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#rows-then-columns-1",
    "href": "materials/03-dashboards/slides.html#rows-then-columns-1",
    "title": "QuartoDashboards",
    "section": "Rows, then columns",
    "text": "Rows, then columns\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows, then columns\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Overview\n\n### \n\nThis dashboard summarizes an illuminating analysis of fuel economy of cars.\n\n### \n\nThis is a car.\n\n![](images/car.png){fig-alt=\"Illustration of a teal color car.\"}\n\n## Plots\n\n### Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n### Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#columns-then-rows",
    "href": "materials/03-dashboards/slides.html#columns-then-rows",
    "title": "QuartoDashboards",
    "section": "Columns, then rows",
    "text": "Columns, then rows\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows, then columns\"\nformat: \n  dashboard:\n    orientation: columns\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Overview\n\n### \n\nThis dashboard summarizes an illuminating analysis of fuel economy of cars.\n\n### \n\nThis is a car.\n\n![](images/car.png){fig-alt=\"Illustration of a teal color car.\"}\n\n## Plots\n\n### Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n### Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#columns-then-rows-1",
    "href": "materials/03-dashboards/slides.html#columns-then-rows-1",
    "title": "QuartoDashboards",
    "section": "Columns, then rows",
    "text": "Columns, then rows\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Rows, then columns\"\nformat: \n  dashboard:\n    orientation: columns\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Overview\n\n### \n\nThis dashboard summarizes an illuminating analysis of fuel economy of cars.\n\n### \n\nThis is a car.\n\n![](images/car.png){fig-alt=\"Illustration of a teal color car.\"}\n\n## Plots\n\n### Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n### Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#your-turn-1",
    "href": "materials/03-dashboards/slides.html#your-turn-1",
    "title": "QuartoDashboards",
    "section": "Your turn",
    "text": "Your turn\nChange the layout of your dashboard so that it looks like this:\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#quarto-dashboards-are-highly-customizable",
    "href": "materials/03-dashboards/slides.html#quarto-dashboards-are-highly-customizable",
    "title": "QuartoDashboards",
    "section": "Quarto dashboards are highly customizable!",
    "text": "Quarto dashboards are highly customizable!"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#navigation-bar-and-pages",
    "href": "materials/03-dashboards/slides.html#navigation-bar-and-pages",
    "title": "QuartoDashboards",
    "section": "Navigation bar and pages",
    "text": "Navigation bar and pages\nIcon, title, and author along with links to sub-pages if more than one page is defined."
  },
  {
    "objectID": "materials/03-dashboards/slides.html#sidebars-rows-columns-and-tabsets",
    "href": "materials/03-dashboards/slides.html#sidebars-rows-columns-and-tabsets",
    "title": "QuartoDashboards",
    "section": "Sidebars, rows, columns, and tabsets",
    "text": "Sidebars, rows, columns, and tabsets\nRows and columns using markdown headings, with optional attributes to control height, width, etc. Sidebars, mostly used for for interactive inputs. Tabsets to further divide content."
  },
  {
    "objectID": "materials/03-dashboards/slides.html#cards-1",
    "href": "materials/03-dashboards/slides.html#cards-1",
    "title": "QuartoDashboards",
    "section": "Cards",
    "text": "Cards\nCards are containers for code cell outputs (e.g., plots, tables, value boxes) and free form markdown text. The content of cards typically maps to cells in your notebook or source document."
  },
  {
    "objectID": "materials/03-dashboards/slides.html#your-turn-2",
    "href": "materials/03-dashboards/slides.html#your-turn-2",
    "title": "QuartoDashboards",
    "section": "Your turn",
    "text": "Your turn\n\nTake a look at the Tabsets documentation on the Quarto website.\nMove the plots showing the countries that increased and decreased in happiness into a tabset. Your dashboard should then look like this:\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#tabsets",
    "href": "materials/03-dashboards/slides.html#tabsets",
    "title": "QuartoDashboards",
    "section": "Tabsets",
    "text": "Tabsets\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Tabsets\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Overview {.tabset}\n\n### Objective\n\nThis dashboard summarizes an illuminating analysis of fuel economy of cars.\n\n### Car\n\nThis is a car.\n\n![](images/car.png){fig-alt=\"Illustration of a teal color car.\" width=\"299\"}\n\n## Plots {.tabset}\n\n### Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n### Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#tabsets-1",
    "href": "materials/03-dashboards/slides.html#tabsets-1",
    "title": "QuartoDashboards",
    "section": "Tabsets",
    "text": "Tabsets\nEach card within a row/column or each row/column within another becomes a tab:\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Tabsets\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Overview {.tabset}\n\n### Objective\n\nThis dashboard summarizes an illuminating analysis of fuel economy of cars.\n\n### Car\n\nThis is a car.\n\n![](images/car.png){fig-alt=\"Illustration of a teal color car.\" width=\"299\"}\n\n## Plots {.tabset}\n\n### Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n### Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#pages",
    "href": "materials/03-dashboards/slides.html#pages",
    "title": "QuartoDashboards",
    "section": "Pages",
    "text": "Pages\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Pages\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n# Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n# Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#pages-1",
    "href": "materials/03-dashboards/slides.html#pages-1",
    "title": "QuartoDashboards",
    "section": "Pages",
    "text": "Pages\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Pages\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n# Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n# Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#pages-2",
    "href": "materials/03-dashboards/slides.html#pages-2",
    "title": "QuartoDashboards",
    "section": "Pages",
    "text": "Pages\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Pages\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n# Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n# Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#navigation-buttons",
    "href": "materials/03-dashboards/slides.html#navigation-buttons",
    "title": "QuartoDashboards",
    "section": "Navigation buttons",
    "text": "Navigation buttons\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Navigation buttons\"\nformat: \n  dashboard:\n    nav-buttons:\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: GitHub\n      - icon: linkedin\n        href: https://www.linkedin.com/company/posit-software/\n        aria-label: LinkedIn\n      - icon: youtube\n        href: https://youtube.com/\n        aria-label: YouTube\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n# Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n# Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#navigation-buttons-1",
    "href": "materials/03-dashboards/slides.html#navigation-buttons-1",
    "title": "QuartoDashboards",
    "section": "Navigation buttons",
    "text": "Navigation buttons\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Navigation buttons\"\nformat: \n  dashboard:\n    nav-buttons:\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: GitHub\n      - icon: linkedin\n        href: https://www.linkedin.com/company/posit-software/\n        aria-label: LinkedIn\n      - icon: youtube\n        href: https://youtube.com/\n        aria-label: YouTube\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n# Scatter\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n# Bar\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```\n\n\n\n\n\n\nin R, use list instead of dict()"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#value-boxes",
    "href": "materials/03-dashboards/slides.html#value-boxes",
    "title": "QuartoDashboards",
    "section": "Value boxes",
    "text": "Value boxes\n\nmultiple ways to make value boxes\n\n\nValue boxes are a great way to prominently display simple values within a dashboard\nYou can create value boxes in executable cells or plain markdown in divs\nValue boxes use Bootstrap icons (https://icons.getbootstrap.com) and can be set to any color (e.g., with a HEX code) or color alias defined by the theme.\n\n\n\nColor alias\nDefault theme color(s)\n\n\n\n\nprimary\nBlue\n\n\nsecondary\nGray\n\n\nsuccess\nGreen\n\n\ninfo\nBright Blue\n\n\nwarning\nYellow/Orange\n\n\ndanger\nRed\n\n\nlight\nLight Gray\n\n\ndark\nBlack\n\n\n\n\n\nLearn more: https://quarto.org/docs/dashboards/data-display.html#value-boxes"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#value-boxes-1",
    "href": "materials/03-dashboards/slides.html#value-boxes-1",
    "title": "QuartoDashboards",
    "section": "Value boxes",
    "text": "Value boxes\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Valueboxes\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Value boxes {height=\"25%\"}\n\n```{python}\n#| label: calculate-values\nlowest_mileage_index = mpg['cty'].idxmin()\nlowest_mileage_car = mpg.iloc[lowest_mileage_index]\nlowest_mileage_cty = mpg.loc[lowest_mileage_index, 'cty']\n\nhighest_mileage_index = mpg['cty'].idxmax()\nhighest_mileage_car = mpg.iloc[highest_mileage_index]\nhighest_mileage_cty = mpg.loc[highest_mileage_index, 'cty']\n\nmean_city_mileage = mpg['cty'].mean()\nrounded_mean_city_mileage = round(mean_city_mileage, 2)\n```\n\n```{python}\n#| content: valuebox\n#| title: \"Least efficient\"\n#| icon: fuel-pump-fill\n#| color: danger\ndict(\n  value = str(f\"{lowest_mileage_cty} mpg\")\n)\n```\n\n```{python}\n#| content: valuebox\n#| title: \"Most efficient\"\ndict(\n  icon = \"fuel-pump\",\n  color = \"success\",\n  value = str(f\"{highest_mileage_cty} mpg\")\n)\n```\n\n::: {.valuebox icon=\"fuel-pump\" color=\"secondary\"}\nAverage city mileage\n\n`{python} str(rounded_mean_city_mileage)` mpg\n:::\n\n## Plots {height=\"75%\"}\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```\n\n\n\nLearn more: https://quarto.org/docs/dashboards/data-display.html#value-boxes"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#value-boxes-2",
    "href": "materials/03-dashboards/slides.html#value-boxes-2",
    "title": "QuartoDashboards",
    "section": "Value boxes",
    "text": "Value boxes\n\n\n\n\n\ndashboard.qmd\n\n---\ntitle: \"Valueboxes\"\nformat: dashboard\n---\n\n```{python}\nfrom plotnine import ggplot, aes, geom_point, geom_bar\nfrom plotnine.data import mpg\n```\n\n## Value boxes {height=\"25%\"}\n\n```{python}\n#| label: calculate-values\nlowest_mileage_index = mpg['cty'].idxmin()\nlowest_mileage_car = mpg.iloc[lowest_mileage_index]\nlowest_mileage_cty = mpg.loc[lowest_mileage_index, 'cty']\n\nhighest_mileage_index = mpg['cty'].idxmax()\nhighest_mileage_car = mpg.iloc[highest_mileage_index]\nhighest_mileage_cty = mpg.loc[highest_mileage_index, 'cty']\n\nmean_city_mileage = mpg['cty'].mean()\nrounded_mean_city_mileage = round(mean_city_mileage, 2)\n```\n\n```{python}\n#| content: valuebox\n#| title: \"Least efficient\"\n#| icon: fuel-pump-fill\n#| color: danger\ndict(\n  value = str(f\"{lowest_mileage_cty} mpg\")\n)\n```\n\n```{python}\n#| content: valuebox\n#| title: \"Most efficient\"\ndict(\n  icon = \"fuel-pump\",\n  color = \"success\",\n  value = str(f\"{highest_mileage_cty} mpg\")\n)\n```\n\n::: {.valuebox icon=\"fuel-pump\" color=\"secondary\"}\nAverage city mileage\n\n`{python} str(rounded_mean_city_mileage)` mpg\n:::\n\n## Plots {height=\"75%\"}\n\n```{python}\n#| title: Highway vs. city mileage\n(\n    ggplot(mpg, aes(x = \"cty\", y = \"hwy\"))\n    + geom_point()\n)\n```\n\n```{python}\n#| title: Drive types\n(\n    ggplot(mpg, aes(x = \"drv\"))\n    + geom_bar()\n)\n```\n\n\n\n\n\n\nLearn more: https://quarto.org/docs/dashboards/data-display.html#value-boxes"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#value-boxes---r-syntax",
    "href": "materials/03-dashboards/slides.html#value-boxes---r-syntax",
    "title": "QuartoDashboards",
    "section": "Value boxes - R syntax",
    "text": "Value boxes - R syntax\n\n\ndashboard.qmd\n\n---\ntitle: \"Valueboxes\"\nformat: dashboard\n---\n\n```{r}\n#| content: valuebox\n#| title: \"Least efficient\"\n#| icon: fuel-pump-fill\n#| color: danger\nlist(\n  value = paste(lowest_mileage_cty, \"mpg\")\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Most efficient\"\nlist(\n  icon = \"fuel-pump\",\n  color = \"success\",\n  value = paste(highest_mileage_cty, \"mpg\")\n)\n```\n\n::: {.valuebox icon=\"fuel-pump\" color=\"secondary\"}\nAverage city mileage\n\n30 mpg\n:::\n\n\nLearn more: https://quarto.org/docs/dashboards/data-display.html#value-boxes"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#markdown-text",
    "href": "materials/03-dashboards/slides.html#markdown-text",
    "title": "QuartoDashboards",
    "section": "Markdown text",
    "text": "Markdown text\n\nYou can include markdown text anywhere within a dashboard\nMarkdown text is automatically placed in cards, but you can also explicitly put them in cards with fenced divs, and add titles to cards\n::: {.card title=\"Title goes here\"}\nText goes here.\n:::\nYou can place markdown text and other cell output in a single card as well\n::: {.card title=\"Title goes here\"}\nText goes here.\n\n```{r}\n# code generating output goes here\n```\n:::"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#your-turn-3",
    "href": "materials/03-dashboards/slides.html#your-turn-3",
    "title": "QuartoDashboards",
    "section": "Your turn",
    "text": "Your turn\nAdd two value boxes to your dashboard, above the tabset, so that your dashboard looks like this:\n\nUse the brand colors. You can either hard-code the value box values (‚ÄúFinland‚Äù and ‚ÄúSocial support‚Äù) or calculate them using the data.\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/03-dashboards/slides.html#and-much-more",
    "href": "materials/03-dashboards/slides.html#and-much-more",
    "title": "QuartoDashboards",
    "section": "‚Ä¶and much more!",
    "text": "‚Ä¶and much more!\nThere‚Äôs much more you can adjust and do with Quarto dashboards, including:\n\nSpecify additional layout options, like scrolling\nUse dynamic cell titles\nAdd a sidebar"
  },
  {
    "objectID": "materials/03-dashboards/exercise-03.html",
    "href": "materials/03-dashboards/exercise-03.html",
    "title": "",
    "section": "",
    "text": "Take a look at the Tabsets documentation on the Quarto website.\nMove the plots showing the countries that increased and decreased in happiness into a tabset. Your dashboard should then look like this:"
  },
  {
    "objectID": "materials/03-dashboards/exercise-01.html",
    "href": "materials/03-dashboards/exercise-01.html",
    "title": "",
    "section": "",
    "text": "Open dashboard-r.qmd or dashboard-python.qmd.\nChange the format from html to dashboard.\nRe-render.\nAdd relevant titles to each card.\n\nThe brand.yml file should be automatically applied!"
  },
  {
    "objectID": "materials/04-typst/slides.html#hello-typst",
    "href": "materials/04-typst/slides.html#hello-typst",
    "title": "PDFs with Typst",
    "section": "Hello, Typst!",
    "text": "Hello, Typst!\n\n\n\n\n\n\n\nTypst is a new open-source markup-based typesetting system that is designed to be as powerful as LaTeX while being much easier to learn and use. Typst is built to simplify the process of creating beautiful, professional PDFs. It uses a markup-based system, which means you write plain text and code to define your document‚Äôs structure and style, just like you would with Quarto or Markdown.\n\n\nLearn more: Typst in Quarto"
  },
  {
    "objectID": "materials/04-typst/slides.html#hello-typst-1",
    "href": "materials/04-typst/slides.html#hello-typst-1",
    "title": "PDFs with Typst",
    "section": "Hello, Typst!",
    "text": "Hello, Typst!\nTo use Typst with Quarto, set the format in the YAML of your Quarto document:\n\n\n---\nformat: typst\n---\n\n\n\n\n\n\n\n\nLearn more: Typst in Quarto\n\n\nHow do you use Typst with Quarto? You just need to specify it as your output format in the YAML header of your Quarto document. This is the default page layout you‚Äôll get: a clean, single-column PDF."
  },
  {
    "objectID": "materials/04-typst/slides.html#page-layout",
    "href": "materials/04-typst/slides.html#page-layout",
    "title": "PDFs with Typst",
    "section": "Page layout",
    "text": "Page layout\nControl the size of the page (papersize), the page margins (margin), and the number of columns used for page content (columns):\n\n\n---\ntitle: Page Layout\nformat:\n  typst:\n    papersize: a5\n    margin:\n      x: 1cm\n      y: 1cm\n    columns: 2\n---\n\n\n\n\n\n\n\n\nLearn more: Page Layout\n\n\nOne of the great things about Typst is how easily you can customize your PDF‚Äôs appearance. You can control the page size, margins, and even the number of columns directly from your YAML. For example, to create a two-column, A5-sized document with one-centimeter margins, you can use this code."
  },
  {
    "objectID": "materials/04-typst/slides.html#margins",
    "href": "materials/04-typst/slides.html#margins",
    "title": "PDFs with Typst",
    "section": "Margins",
    "text": "Margins\nEdit the margin‚Äôs horizontal direction (x) and vertical direction (y):\nmargin:\n  x: 1.25in\n  y: 1.25in\nCan also use relative length:\nmargin:\n  left: 10%\n\nLearn more: Margins\n\n\nIf you want more granular control, you can define your margins for the horizontal and vertical directions separately. You can use standard units like inches or centimeters, as shown here."
  },
  {
    "objectID": "materials/04-typst/slides.html#paper-size",
    "href": "materials/04-typst/slides.html#paper-size",
    "title": "PDFs with Typst",
    "section": "Paper Size",
    "text": "Paper Size\npapersize: us-letter\n\n\nLearn more: Supported page sizes\n\n\nTypst supports a wide range of paper sizes. Instead of just us-letter or a4, you have a lot of options. Typst‚Äôs documentation has a full list of all the supported sizes. It‚Äôs a very comprehensive set of options."
  },
  {
    "objectID": "materials/04-typst/slides.html#more-options",
    "href": "materials/04-typst/slides.html#more-options",
    "title": "PDFs with Typst",
    "section": "More options",
    "text": "More options\nTable of contents\ntoc: true\ntoc-depth: 2\n\nSection numbering\nnumber-sections: true\nUse number-depth:\nnumber-depth: 3\n\nLearn more: Section Numbering, Table of Contents\n\n\nThere are also a ton of other options you can set in your YAML. For example, you can easily add a table of contents and control its depth. Or you can add section numbering to automatically number your headings. You can even specify the depth of the numbering."
  },
  {
    "objectID": "materials/04-typst/slides.html#typst-blocks",
    "href": "materials/04-typst/slides.html#typst-blocks",
    "title": "PDFs with Typst",
    "section": "Typst blocks",
    "text": "Typst blocks\nAdd a .block class to change appearance of blocks:\n::: {.block fill=\"luma(230)\" inset=\"8pt\" radius=\"4pt\"}\n\nThis is a block with gray background and slightly rounded corners.\n\n:::\n\nLearn more: Typst Blocks\n\n\nTypst also lets you create custom blocks to highlight specific content. You can add a .block class to your markdown and change its appearance with a few simple attributes, like fill, inset, and radius."
  },
  {
    "objectID": "materials/04-typst/slides.html#typst-and-fonts",
    "href": "materials/04-typst/slides.html#typst-and-fonts",
    "title": "PDFs with Typst",
    "section": "Typst and fonts",
    "text": "Typst and fonts\nCheck what fonts are available on your system with:\n\n\nTerminal\n\nquarto typst fonts\n\nSet additional paths using font-paths:\n---\nformat: \n  typst:\n    font-paths: myfonts\n---\n\nLearn more: Font Support\n\n\nWith Typst, you can use any font available on your system. To see what fonts are installed, just run this command in your terminal. If you have custom fonts, you can tell Typst where to find them by setting the font-paths option in your YAML."
  },
  {
    "objectID": "materials/04-typst/slides.html#color",
    "href": "materials/04-typst/slides.html#color",
    "title": "PDFs with Typst",
    "section": "Color",
    "text": "Color\nUse colors from the _brand.yml file in Typst using brand-color:\n::: {.block fill=\"brand-color.primary\" inset=\"8pt\" radius=\"4pt\"}\n\nThis is a block with the primary color and slightly rounded corners.\n\n:::\n\nLearn more: Typst Brand YAML\n\n\nThis includes colors. You can reference colors defined in your _brand.yml file directly in your Typst documents. Here, we‚Äôre using a block with a fill color from our brand‚Äôs primary color palette."
  },
  {
    "objectID": "materials/04-typst/slides.html#fonts",
    "href": "materials/04-typst/slides.html#fonts",
    "title": "PDFs with Typst",
    "section": "Fonts",
    "text": "Fonts\nQuarto will download fonts from Google Fonts and put them in the Typst fonts path if they are specified in the typography.fonts section of _brand.yml using source: google.\n\n\n\n\n_brand.yml\n\ntypography:\n  fonts:\n    - family: Libre Franklin\n      source: google\n      weight: [400, 700]\n\n  base:\n    family: Libre Franklin\n    weight: 400\n\n  headings:\n    family: Libre Franklin\n    weight: 700\n    color: dark-purple\n\n\n\n\n\n\n\n\n\nQuarto can even handle fonts for you. If you specify a font from Google Fonts in your _brand.yml file, Quarto will automatically download it and make it available to Typst. This is an example of what that looks like in your _brand.yml:"
  },
  {
    "objectID": "materials/04-typst/slides.html#fonts-1",
    "href": "materials/04-typst/slides.html#fonts-1",
    "title": "PDFs with Typst",
    "section": "Fonts",
    "text": "Fonts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbase\nheadings\ntitle1\nsubtitle\nmonospace-inline\nmonospace-block\nlink\n\n\n\n\nfamily\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\nNA\n\n\nsize\n‚úì\nNA\nNA\nNA\n‚úì\n‚úì\nNA\n\n\nweight\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n\n\nstyle\nNA\n‚úì\n‚úì\n‚úì\nNA\nNA\nNA\n\n\ncolor\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n‚úì\n\n\nbackground-color\nNA\nNA\nNA\nNA\n‚úì\n‚úì\n‚úì\n\n\ndecoration\nNA\nNA\nNA\nNA\nNA\nNA\n‚úì\n\n\nline-height\n‚úì\n‚úì\n‚úì\n‚úì\nNA\n‚úì\nNA\n\n\n\n\nLearn more: Typst Brand YAML\n\n\nThis table shows the various font properties you can control within your _brand.yml file. You have fine-grained control over things like font family, size, weight, and color for different elements of your document, from the base text to headings and titles.\n\nWhile being styled as headings, title and subtitle have a separate implementation."
  },
  {
    "objectID": "materials/04-typst/slides.html#logo",
    "href": "materials/04-typst/slides.html#logo",
    "title": "PDFs with Typst",
    "section": "Logo",
    "text": "Logo\nThe Typst implementation allows customization of the logo position at the document level:\n---\nformat:\n  typst:\n    logo:\n      width: 1in\n      location: right-top\n      padding-right: 0.5in\n      padding-top: 0.25in\n      alt: Alternate alternate text\n---\n\nLearn more: Logo Customization\n\n\nThe Typst implementation also allows you to customize your document‚Äôs logo. You can set its width, location on the page, and padding, giving you complete control over how your branding is displayed."
  },
  {
    "objectID": "materials/04-typst/slides.html#your-turn",
    "href": "materials/04-typst/slides.html#your-turn",
    "title": "PDFs with Typst",
    "section": "Your turn",
    "text": "Your turn\n\nIn your document‚Äôs YAML header, change the format option from its current value (e.g., html) to typst.\nChange the number of columns used for the page content to 2 using columns.\nAdd a block to a section of the text and fill it with the tertiary color.\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/04-typst/slides.html#custom-typst-formats",
    "href": "materials/04-typst/slides.html#custom-typst-formats",
    "title": "PDFs with Typst",
    "section": "Custom Typst formats",
    "text": "Custom Typst formats\nTypst allows you to define your own templates to produce highly customized documents.\n\n\n\n\n\n\nIEEE\n\n\n\n\n\n\n\nPoster\n\n\n\n\n\n\n\nLetter\n\n\n\n\n\n\n\nDept News\n\n\n\n\n\n\nLearn more: Custom Typst Formats\n\n\nYou can find a bunch of ready-made templates on Quarto‚Äôs GitHub page. You can easily use them with the quarto use template command."
  },
  {
    "objectID": "materials/04-typst/slides.html#custom-typst-formats-1",
    "href": "materials/04-typst/slides.html#custom-typst-formats-1",
    "title": "PDFs with Typst",
    "section": "Custom Typst formats",
    "text": "Custom Typst formats\n\n\n\nFormat\nUsage\n\n\n\n\nPoster\nquarto use template quarto-ext/typst-templates/poster\n\n\nIEEE\nquarto use template quarto-ext/typst-templates/ieee\n\n\nAMS\nquarto use template quarto-ext/typst-templates/ams\n\n\nLetter\nquarto use template quarto-ext/typst-templates/letter\n\n\nFiction\nquarto use template quarto-ext/typst-templates/fiction\n\n\nDept News\nquarto use template quarto-ext/typst-templates/dept-news\n\n\n\n\nLearn more: Custom Typst Formats\n\n\nHere‚Äôs a list of some of the custom formats available and how to use them with Quarto. These templates can save you a lot of time by providing a pre-defined structure and style for common document types."
  },
  {
    "objectID": "materials/04-typst/slides.html#creating-a-new-typst-format",
    "href": "materials/04-typst/slides.html#creating-a-new-typst-format",
    "title": "PDFs with Typst",
    "section": "Creating a new Typst format",
    "text": "Creating a new Typst format\nUse the quarto create command to get started:\n\n\nTerminal\n\n$ quarto create extension format\n\nChoose typst as the base format and provide a name for the extension.\n\nLearn more: Create a Format\n\n\nIf you can‚Äôt find a template that fits your needs, you can create your own. The quarto create extension format command gives you a starter pack of files to begin with."
  },
  {
    "objectID": "materials/04-typst/slides.html#creating-a-new-typst-format-1",
    "href": "materials/04-typst/slides.html#creating-a-new-typst-format-1",
    "title": "PDFs with Typst",
    "section": "Creating a new Typst format",
    "text": "Creating a new Typst format\n\n\n\nFile\nDescription\n\n\n\n\n_extension.yml\nBasic extension metadata (name, author, description, etc.) and format definition.\n\n\nREADME.md\nDocumentation on how to install and use the format.\n\n\ntemplate.qmd\nA starter document that demonstrates the basics of the format.\n\n\ntypst-template.typ\nThe core Typst template function (documentation on creating Typst templates can be found here: https://typst.app/docs/tutorial/making-a-template/).\n\n\ntypst-show.typ\nFile that calls the template‚Äôs function (mapping Pandoc metadata to function arguments).\n\n\n\n\nLearn more: Making a template, Awesome Typst\n\n\nWhen you create a new format, you get a few key files. The most important ones for our purposes are typst-show.typ and typst-template.typ. typst-show.typ: This file acts as a bridge. It takes the metadata from your Quarto document‚Äôs YAML and passes it as arguments to your Typst template function. typst-template.typ: This is the core of your format. It defines the layout and styling of your document."
  },
  {
    "objectID": "materials/04-typst/slides.html#typst-show.typ",
    "href": "materials/04-typst/slides.html#typst-show.typ",
    "title": "PDFs with Typst",
    "section": "typst-show.typ",
    "text": "typst-show.typ\n\n\n./_extensions/article/typst-show.typ\n\n// Typst custom formats typically consist of a 'typst-template.typ' (which is\n// the source code for a typst template) and a 'typst-show.typ' which calls the\n// template's function (forwarding Pandoc metadata values as required)\n//\n// This is an example 'typst-show.typ' file (based on the default template  \n// that ships with Quarto). It calls the typst function named 'article' which \n// is defined in the 'typst-template.typ' file. \n//\n// If you are creating or packaging a custom typst template you will likely\n// want to replace this file and 'typst-template.typ' entirely. You can find\n// documentation on creating typst templates here and some examples here:\n//   - https://typst.app/docs/tutorial/making-a-template/\n//   - https://github.com/typst/templates\n#show: doc =&gt; article(\n$if(title)$\n  title: [$title$],\n$endif$\n$if(subtitle)$\n  subtitle: [$subtitle$],\n$endif$\n$if(by-author)$\n  authors: (\n$for(by-author)$\n$if(it.name.literal)$\n    ( name: [$it.name.literal$],\n      affiliation: [$for(it.affiliations)$$it.name$$sep$, $endfor$],\n      email: [$it.email$] ),\n$endif$\n$endfor$\n    ),\n$endif$\n$if(date)$\n  date: [$date$],\n$endif$\n$if(lang)$\n  lang: \"$lang$\",\n$endif$\n$if(region)$\n  region: \"$region$\",\n$endif$\n$if(abstract)$\n  abstract: [$abstract$],\n  abstract-title: \"$labels.abstract$\",\n$endif$\n$if(margin)$\n  margin: ($for(margin/pairs)$$margin.key$: $margin.value$,$endfor$),\n$endif$\n$if(papersize)$\n  paper: \"$papersize$\",\n$endif$\n$if(mainfont)$\n  font: (\"$mainfont$\",),\n$elseif(brand.typography.base.family)$\n  font: $brand.typography.base.family$,\n$endif$\n$if(fontsize)$\n  fontsize: $fontsize$,\n$elseif(brand.typography.base.size)$\n  fontsize: $brand.typography.base.size$,\n$endif$\n$if(title)$\n$if(brand.typography.headings.family)$\n  heading-family: $brand.typography.headings.family$,\n$endif$\n$if(brand.typography.headings.weight)$\n  heading-weight: $brand.typography.headings.weight$,\n$endif$\n$if(brand.typography.headings.style)$\n  heading-style: \"$brand.typography.headings.style$\",\n$endif$\n$if(brand.typography.headings.color)$\n  heading-color: $brand.typography.headings.color$,\n$endif$\n$if(brand.typography.headings.line-height)$\n  heading-line-height: $brand.typography.headings.line-height$,\n$endif$\n$endif$\n$if(section-numbering)$\n  sectionnumbering: \"$section-numbering$\",\n$endif$\n  pagenumbering: $if(page-numbering)$\"$page-numbering$\"$else$none$endif$,\n$if(toc)$\n  toc: $toc$,\n$endif$\n$if(toc-title)$\n  toc_title: [$toc-title$],\n$endif$\n$if(toc-indent)$\n  toc_indent: $toc-indent$,\n$endif$\n  toc_depth: $toc-depth$,\n  cols: $if(columns)$$columns$$else$1$endif$,\n  doc,\n)\n\n\nThis is what a typical typst-show.typ file looks like. It‚Äôs a simple script that grabs values from your Quarto YAML (like title, subtitle, and authors) and then calls the article function defined in our template file, passing those values along."
  },
  {
    "objectID": "materials/04-typst/slides.html#typst-template.typ",
    "href": "materials/04-typst/slides.html#typst-template.typ",
    "title": "PDFs with Typst",
    "section": "typst-template.typ",
    "text": "typst-template.typ\n\n\n./_extensions/article/typst-template.typ\n\n// This is an example typst template (based on the default template that ships\n// with Quarto). It defines a typst function named 'article' which provides\n// various customization options. This function is called from the \n// 'typst-show.typ' file (which maps Pandoc metadata function arguments)\n//\n// If you are creating or packaging a custom typst template you will likely\n// want to replace this file and 'typst-show.typ' entirely. You can find \n// documentation on creating typst templates and some examples here: \n//   - https://typst.app/docs/tutorial/making-a-template/\n//   - https://github.com/typst/templates\n\n\n#let article(\n  title: none,\n  subtitle: none,\n  authors: none,\n  date: none,\n  abstract: none,\n  abstract-title: none,\n  cols: 1,\n  margin: (x: 1.25in, y: 1.25in),\n  paper: \"us-letter\",\n  lang: \"en\",\n  region: \"US\",\n  font: \"libertinus serif\",\n  fontsize: 11pt,\n  title-size: 1.5em,\n  subtitle-size: 1.25em,\n  heading-family: \"libertinus serif\",\n  heading-weight: \"bold\",\n  heading-style: \"normal\",\n  heading-color: black,\n  heading-line-height: 0.65em,\n  sectionnumbering: none,\n  pagenumbering: \"1\",\n  toc: false,\n  toc_title: none,\n  toc_depth: none,\n  toc_indent: 1.5em,\n  doc,\n) = {\n  set page(\n    paper: paper,\n    margin: margin,\n    numbering: pagenumbering,\n  )\n  set par(justify: true)\n  set text(lang: lang,\n           region: region,\n           font: font,\n           size: fontsize)\n  set heading(numbering: sectionnumbering)\n  if title != none {\n    align(center)[#block(inset: 2em)[\n      #set par(leading: heading-line-height)\n      #if (heading-family != none or heading-weight != \"bold\" or heading-style != \"normal\"\n           or heading-color != black) {\n        set text(font: heading-family, weight: heading-weight, style: heading-style, fill: heading-color)\n        text(size: title-size)[#title]\n        if subtitle != none {\n          parbreak()\n          text(size: subtitle-size)[#subtitle]\n        }\n      } else {\n        text(weight: \"bold\", size: title-size)[#title]\n        if subtitle != none {\n          parbreak()\n          text(weight: \"bold\", size: subtitle-size)[#subtitle]\n        }\n      }\n    ]]\n  }\n\n  if authors != none {\n    let count = authors.len()\n    let ncols = calc.min(count, 3)\n    grid(\n      columns: (1fr,) * ncols,\n      row-gutter: 1.5em,\n      ..authors.map(author =&gt;\n          align(center)[\n            #author.name \\\n            #author.affiliation \\\n            #author.email\n          ]\n      )\n    )\n  }\n\n  if date != none {\n    align(center)[#block(inset: 1em)[\n      #date\n    ]]\n  }\n\n  if abstract != none {\n    block(inset: 2em)[\n    #text(weight: \"semibold\")[#abstract-title] #h(1em) #abstract\n    ]\n  }\n\n  if toc {\n    let title = if toc_title == none {\n      auto\n    } else {\n      toc_title\n    }\n    block(above: 0em, below: 2em)[\n    #outline(\n      title: toc_title,\n      depth: toc_depth,\n      indent: toc_indent\n    );\n    ]\n  }\n\n  if cols == 1 {\n    doc\n  } else {\n    columns(cols, doc)\n  }\n}\n\n#set table(\n  inset: 6pt,\n  stroke: none\n)\n\n\nThe typst-template.typ file defines the actual appearance of the document. Here, we define the article function that receives the metadata from typst-show.typ. This function sets the page layout, fonts, and other stylistic elements. For example, the highlighted code shows how the function sets the page‚Äôs paper size, margins, and number of columns based on the values it receives. This is where you can get really creative with your designs."
  },
  {
    "objectID": "materials/04-typst/slides.html#world-happiness-report-example",
    "href": "materials/04-typst/slides.html#world-happiness-report-example",
    "title": "PDFs with Typst",
    "section": "World Happiness Report example",
    "text": "World Happiness Report example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLink to World Happiness Report\n\n\nLet‚Äôs look at a more complex example. We‚Äôll try to recreate the styling of the World Happiness Report PDF. This report has a very specific style: a unique cover page, a two-column layout, and custom fonts and colors. We‚Äôll explore how to achieve this with Typst."
  },
  {
    "objectID": "materials/04-typst/slides.html#example-report-with-brand.yml",
    "href": "materials/04-typst/slides.html#example-report-with-brand.yml",
    "title": "PDFs with Typst",
    "section": "Example report with brand.yml",
    "text": "Example report with brand.yml\n\n\nUsing just the _brand.yml file, we can get a good start. We can handle things like the table of contents, basic heading styles, and logo placement. However, some elements, like the title page and more advanced heading styles, require a bit more work."
  },
  {
    "objectID": "materials/04-typst/slides.html#advanced-styling",
    "href": "materials/04-typst/slides.html#advanced-styling",
    "title": "PDFs with Typst",
    "section": "Advanced styling",
    "text": "Advanced styling\nWith brand.yml:\n‚úÖ Table of contents\n‚úÖ Simple heading styling\n‚úÖ Logo placement customization\n‚úÖ Fonts\n‚ùå Cover page\n‚ùå Advanced headings\n\nLearn more: Advanced Styling"
  },
  {
    "objectID": "materials/04-typst/slides.html#adding-a-title-page-with-image",
    "href": "materials/04-typst/slides.html#adding-a-title-page-with-image",
    "title": "PDFs with Typst",
    "section": "Adding a title page with image",
    "text": "Adding a title page with image\n\n\nSet rules:\n\n\ntypst-template.typ\n\n#let title_page(title)={\n    page(margin: 0in,\n        background: image(\"cover.jpg\", height: 100%, fit: \"cover\"))[\n        #set text(fill: white)\n\n        #place(center + horizon, dy: -2.5in)[\n            #set align(center + horizon)\n            #block(width: 100%, fill: rgb(\"#983e91\"), outset: 5em)[\n                #text(weight: \"light\", size: 36pt, title)\n            ]\n        ]\n        #place(center + bottom, dy: -40pt)[\n          #block(height: 40pt)[\n            #image(\"whr_logo.png\")\n          ]\n        ]\n    ]\n}\n\n\n\n\n\n\n\n\n\n\n\nTo create a custom title page, we can define a function in our typst-template.typ file. This function can set specific page properties, like a background image, and then overlay text and other elements. In this example, we‚Äôre using a background image, setting the text color to white, and then placing the title and logo at specific positions. The result is a highly customized title page that perfectly matches the original report‚Äôs design."
  },
  {
    "objectID": "materials/04-typst/slides.html#your-turn-1",
    "href": "materials/04-typst/slides.html#your-turn-1",
    "title": "PDFs with Typst",
    "section": "Your turn",
    "text": "Your turn\nInstall the whr-typst-template:\n\n\nTerminal\n\nquarto use template ivelasq/whr-typst-template\n\nOpen the _extensions/whr/typst-show.typ and _extensions/whr/typst-template.typ files to examine their contents.\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/04-typst/exercise-02.html",
    "href": "materials/04-typst/exercise-02.html",
    "title": "",
    "section": "",
    "text": "Install the whr-typst-template:\n\n\nTerminal\n\nquarto use template ivelasq/whr-typst-template\n\nOpen the _extensions/whr/typst-show.typ and _extensions/whr/typst-template.typ files to examine their contents."
  },
  {
    "objectID": "materials/06-byob/slides.html#creating-a-_brand.yml-file-1",
    "href": "materials/06-byob/slides.html#creating-a-_brand.yml-file-1",
    "title": "Creating and sharing your brand",
    "section": "Creating a _brand.yml file",
    "text": "Creating a _brand.yml file\n\nIn RStudio, go to File &gt; New File &gt; Text File.\nIn VS Code or Positron, use the Command Palette (Ctrl+Shift+P on Windows/Linux or Cmd+Shift+P on Mac) and select New Untitled Text File.\n\nSave the file as _brand.yml.\n\nYou can create this file in any text editor. If you‚Äôre using RStudio, you‚Äôll find the option under the ‚ÄúFile‚Äù menu. For those of you using VS Code or Positron, the command palette is the fastest way to get started. Once you‚Äôve created the file, make sure to save it as _brand.yml in the root directory of your project."
  },
  {
    "objectID": "materials/06-byob/slides.html#brand.yml-inspiration",
    "href": "materials/06-byob/slides.html#brand.yml-inspiration",
    "title": "Creating and sharing your brand",
    "section": "brand.yml Inspiration",
    "text": "brand.yml Inspiration\nThe brand.yml docs site has a great Inspiration page with many references!\n\n\n\n\n\n\nLearn more: Inspiration\n\n\nWhen you‚Äôre ready to start building your brand file, you don‚Äôt have to start from scratch. The brand.yml documentation site has an entire page dedicated to inspiration. The inspiration page is full of examples from real-world projects, which can give you a great starting point for your own branding. I highly recommend checking it out for ideas on colors, fonts, and layouts."
  },
  {
    "objectID": "materials/06-byob/slides.html#get-a-little-help-from-a-large-language-model-llm",
    "href": "materials/06-byob/slides.html#get-a-little-help-from-a-large-language-model-llm",
    "title": "Creating and sharing your brand",
    "section": "Get a little help from a Large Language Model (LLM)",
    "text": "Get a little help from a Large Language Model (LLM)\n\n\n\n\n\n\nLearn more: Creating a brand.yml with an LLM\n\n\nFor those of you who want to jumpstart the process even more, you can use a Large Language Model, or LLM, to help you. The brand.yml docs site has a fantastic guide with prompts you can use to generate a starter brand.yml file. You can ask an LLM like ChatGPT or Claude to create a brand.yml file for you, describing the look and feel you want. This can save a lot of time and help you get a solid foundation very quickly."
  },
  {
    "objectID": "materials/06-byob/slides.html#using-a-shared-drive",
    "href": "materials/06-byob/slides.html#using-a-shared-drive",
    "title": "Creating and sharing your brand",
    "section": "Using a shared drive",
    "text": "Using a shared drive\n\nShared repository (Google Drive, OneDrive, etc.)\nGitHub repo allows you to share with version control\n\n\nThe simplest way is to share the file directly. You can use a shared repository like Google Drive or OneDrive. However, a more robust solution, especially if you‚Äôre working with a team, is to use a GitHub repo. By storing your _brand.yml file in a GitHub repo, you get all the benefits of version control. This means you can track changes, revert to previous versions if needed."
  },
  {
    "objectID": "materials/06-byob/slides.html#creating-a-brand-extension",
    "href": "materials/06-byob/slides.html#creating-a-brand-extension",
    "title": "Creating and sharing your brand",
    "section": "Creating a Brand Extension",
    "text": "Creating a Brand Extension\nNew in Quarto 1.8, you can create a Quarto extension that provides a brand.yml file and assets.\nGet started by running the below:\n\n\nTerminal\n\n$ quarto create extension brand\n ? Extension Name ‚Ä∫ my-brand\n\n\n\n\n\n\n\n\nImportant\n\n\nBrand Extensions must be used with a _quarto.yml project.\n\n\n\n\nLearn more: Brand Extensions\n\n\nNow, here‚Äôs where it gets really powerful. As of Quarto 1.8, you can package your _brand.yml file and all its assets, like images and CSS, into a Quarto extension. The command line code shown on the slide walks you through the first step of creating a brand extension from the terminal. It‚Äôs important to note that Brand Extensions must be used within a Quarto project that has its own _quarto.yml file."
  },
  {
    "objectID": "materials/06-byob/slides.html#contents-of-a-brand-extension",
    "href": "materials/06-byob/slides.html#contents-of-a-brand-extension",
    "title": "Creating and sharing your brand",
    "section": "Contents of a Brand Extension",
    "text": "Contents of a Brand Extension\n? Extension Name ‚Ä∫ my-brand\nCreating extension at /{...}/my-brand:\n  - Created _quarto.yml\n  - Created README.md\n  - Created _extensions/my-brand/brand.yml\n  - Created _extensions/my-brand/_extension.yml\n  - Created .gitignore\n  - Created example.qmd\n? Open With\n‚ùØ positron\n  vscode\n  rstudio\n  (don't open)\n\nWhen you create a brand extension, Quarto generates a directory with some key files."
  },
  {
    "objectID": "materials/06-byob/slides.html#contents-of-a-brand-extension-1",
    "href": "materials/06-byob/slides.html#contents-of-a-brand-extension-1",
    "title": "Creating and sharing your brand",
    "section": "Contents of a Brand Extension",
    "text": "Contents of a Brand Extension\n\n\n_extensions/my-brand/_extension.yml\n\ntitle: My-brand\nauthor: Gordon Woodhull\nversion: 1.0.0\nquarto-required: \"&gt;=99.9.0\"\ncontributes:\n  metadata:\n    project:\n      brand: brand.yml\n\n\nOne important one is the _extension.yml file, which acts as the manifest for your extension. The code on the slide shows a simple _extension.yml file. The contributes section is what makes this a brand extension. It tells Quarto that this extension provides a brand.yml file."
  },
  {
    "objectID": "materials/06-byob/slides.html#contents-of-a-brand-extension-2",
    "href": "materials/06-byob/slides.html#contents-of-a-brand-extension-2",
    "title": "Creating and sharing your brand",
    "section": "Contents of a Brand Extension",
    "text": "Contents of a Brand Extension\n\n\n_extensions/mybrand/brand.yml\n\ncolor:\n  background:\n    light: \"#fff\"\n    dark: \"#000\"\n  foreground:\n    light: \"#000\"\n    dark: \"#fff\"\n\n\nWithin the created _brand.yml file, you can start building your brand. It provides just the most basic code to enable light and dark mode."
  },
  {
    "objectID": "materials/06-byob/slides.html#sharing-the-brand-extension",
    "href": "materials/06-byob/slides.html#sharing-the-brand-extension",
    "title": "Creating and sharing your brand",
    "section": "Sharing the Brand Extension",
    "text": "Sharing the Brand Extension\nPublish your Brand Extension to a GitHub repository. Once it‚Äôs on GitHub, anyone can add it to their Quarto project.\nRun the following command in the Quarto project to use the extension:\n\n\nTerminal\n\nquarto add &lt;github-organization&gt;/&lt;your-brand-name&gt;"
  },
  {
    "objectID": "materials/06-byob/slides.html#updating-the-brand-extension",
    "href": "materials/06-byob/slides.html#updating-the-brand-extension",
    "title": "Creating and sharing your brand",
    "section": "Updating the Brand Extension",
    "text": "Updating the Brand Extension\nIf you make changes to your Brand Extension on GitHub, users can update the extension in their projects by running this command:\n\n\nTerminal\n\nquarto update &lt;github-organization&gt;/&lt;your-brand-name&gt;"
  },
  {
    "objectID": "materials/06-byob/slides.html#your-turn",
    "href": "materials/06-byob/slides.html#your-turn",
    "title": "Creating and sharing your brand",
    "section": "Your turn",
    "text": "Your turn\nCreate a brand file for your organization using the Brand Extension.\n\nOpen your Terminal and run: quarto create extension brand\nRead about how to prompt a large language model (LLM) to create a _brand.yml file: posit-dev.github.io/brand-yml/articles/llm-brand-yml-prompt\nCustomize the default _extensions/mybrand/brand.yml file. Take note of how well the output incorporates your brand and what, if any, elements are missing or need to be adjusted.\n\nPreview by running quarto preview example.qmd in the Terminal.\n\n\nWe‚Äôd love for you to add your new brand.yml file to the Inspiration page! You can see examples and contribute your own by visiting the following links:\n\nInspiration page: posit-dev.github.io/brand-yml/inspiration\nSubmit a PR: github.com/posit-dev/brand-yml/issues\n\n\n\n\n‚àí+\n10:00\n\n\n\n\nAnd with that, it‚Äôs time for you to give it a try! We‚Äôre going to take a few minutes to walk through creating your own _brand.yml file."
  },
  {
    "objectID": "materials/06-byob/exercise-01.html",
    "href": "materials/06-byob/exercise-01.html",
    "title": "",
    "section": "",
    "text": "Create a brand file for your organization using the Brand Extension.\n\nOpen your Terminal and run: quarto create extension brand\nRead about how to prompt a large language model (LLM) to create a _brand.yml file: posit-dev.github.io/brand-yml/articles/llm-brand-yml-prompt\nCustomize the default _extensions/mybrand/brand.yml file. Take note of how well the output incorporates your brand and what, if any, elements are missing or need to be adjusted.\n\nPreview by running quarto preview example.qmd in the Terminal.\n\n\nWe‚Äôd love for you to add your new brand.yml file to the Inspiration page! You can see examples and contribute your own by visiting the following links:\n\nInspiration page: posit-dev.github.io/brand-yml/inspiration\nSubmit a PR: github.com/posit-dev/brand-yml/issues"
  },
  {
    "objectID": "materials/05-websites/index.html",
    "href": "materials/05-websites/index.html",
    "title": "Websites",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Websites"
    ]
  },
  {
    "objectID": "materials/05-websites/index.html#slides",
    "href": "materials/05-websites/index.html#slides",
    "title": "Websites",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Websites"
    ]
  },
  {
    "objectID": "materials/05-websites/index.html#exercises",
    "href": "materials/05-websites/index.html#exercises",
    "title": "Websites",
    "section": "Exercises",
    "text": "Exercises\n\nExercise 1\n\nGet the starter template. If you‚Äôre using Posit Cloud, skip this step and instead open the whr-website project. If you‚Äôre using Codespaces, follow the instructions here, but go to this repo instead.\nOpen index.qmd and click Render/Preview.\nEdit title index.qmd YAML to better reflect the site and add a subtitle. Preview.\nAdd some text to index.qmd explaining the plot. Preview.\n\n\n\nExercise 2\n\nAdd some information to about.qmd.\nEdit _quarto.yml so that the navbar includes the about page.\nHow do you think you change the position of the links in the navbar? Change them to appear on the right.\n\n\n\nExercise 3\nPublish your website to Quarto Pub.\n\nFrom the Terminal, run quarto publish, then select Quarto Pub.\nFollow the prompts to set up an account and publish.\n\nIf you have time, publish to Connect Cloud. Note: if you‚Äôre using R, you will need an renv.lock file (learn how here) if publishing from Positron or VS Code, or a manifest.json file (learn how here) if publishing from GitHub.",
    "crumbs": [
      "Websites"
    ]
  },
  {
    "objectID": "materials/05-websites/exercise-02.html",
    "href": "materials/05-websites/exercise-02.html",
    "title": "",
    "section": "",
    "text": "Add some information to about.qmd.\nEdit _quarto.yml so that the navbar includes the about page.\nHow do you think you change the position of the links in the navbar? Change them to appear on the right."
  },
  {
    "objectID": "materials/01-intro/slides.html#branded-websites-presentations-dashboards-and-pdfs-with-quarto",
    "href": "materials/01-intro/slides.html#branded-websites-presentations-dashboards-and-pdfs-with-quarto",
    "title": "Quarto\nDocuments",
    "section": "Branded Websites, Presentations, Dashboards, and PDFs with Quarto",
    "text": "Branded Websites, Presentations, Dashboards, and PDFs with Quarto\n WiFi: Posit Conf 2025 Password: conf2025\n Find the materials at: pos.it/quarto-brand-conf25\n Make sure you‚Äôve:\n\nInstalled Quarto 1.8\nJoined Discord: event portal &gt; ‚ÄúJoin the server‚Äù &gt; #workshop-quarto-brand\n\n\nIntro: 30 min your turn 15 minute live coding 45 min talking\nwelcome to I have the wifi I recommend opening the website on your own computer so you can follow along"
  },
  {
    "objectID": "materials/01-intro/slides.html#housekeeping",
    "href": "materials/01-intro/slides.html#housekeeping",
    "title": "Quarto\nDocuments",
    "section": "Housekeeping",
    "text": "Housekeeping\n\nThere are gender neutral bathrooms:\n\nOn LL1 (Under escalators, to the right of the Learning Center)\nOn LL2 (Next to Chicago A)\n\nThere is a meditation/prayer room located on LL2 next to Chicago A.\nThe lactation room is located on LL2 next to Chicago B.\nParticipants who do not wish to be photographed have red lanyards; please note everyone‚Äôs lanyard colors before taking a photo and respect their choices.\nThe Code of Conduct can be found at https://posit.co/code-of-conduct. You can report Code of Conduct violations in person, by email, or by phone. Please see the policy linked above for contact information."
  },
  {
    "objectID": "materials/01-intro/slides.html#discord",
    "href": "materials/01-intro/slides.html#discord",
    "title": "Quarto\nDocuments",
    "section": "Discord",
    "text": "Discord\nFrom the event portal, click ‚ÄúJoin the server‚Äù, find our channel: #workshop-quarto-brand\n\nAsk questions\nShare code"
  },
  {
    "objectID": "materials/01-intro/slides.html#schedule",
    "href": "materials/01-intro/slides.html#schedule",
    "title": "Quarto\nDocuments",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\n\n\nTime\nActivity\n\n\n\n\n9:00 - 10:30\nIntro to Quarto & brand.yml\n\n\n10:30 - 11:00\nCoffee break ‚òïÔ∏è\n\n\n11:00 - 12:30\nPresentations & Dashboards\n\n\n12:30 - 1:30\nLunch break üçΩÔ∏è\n\n\n1:30 - 3:00\nPDFs & Websites\n\n\n3:00 - 3:30\nCoffee break ‚òïÔ∏è\n\n\n3:30 - 5:00\nCustomizing your brand"
  },
  {
    "objectID": "materials/01-intro/slides.html#about-us",
    "href": "materials/01-intro/slides.html#about-us",
    "title": "Quarto\nDocuments",
    "section": "About us",
    "text": "About us\n\n\n\nData Science Educator\nDeveloper Relations, Posit\n\n\n\n\n\n\n\nSara Altman\n @skaltman\n sarakaltman"
  },
  {
    "objectID": "materials/01-intro/slides.html#about-us-1",
    "href": "materials/01-intro/slides.html#about-us-1",
    "title": "Quarto\nDocuments",
    "section": "About us",
    "text": "About us\n\n\n\nSr.¬†Product Marketing Manager\nDeveloper Relations, Posit\n\n\n\n\n\n\n\nIsabella Vel√°squez\n @ivelasq\n ivelasq.rbind.io"
  },
  {
    "objectID": "materials/01-intro/slides.html#about-us-2",
    "href": "materials/01-intro/slides.html#about-us-2",
    "title": "Quarto\nDocuments",
    "section": "About us",
    "text": "About us\n\n\n\n\n\n\n\n\nGordon Woodhull\nSoftware Engineer, Quarto\n\n\n\n\n\n\n\n\nChristophe Dervieux\nSoftware Engineer,R Markdown and Quarto\n\n\n\nIntroduce TAs"
  },
  {
    "objectID": "materials/01-intro/slides.html#meeting-you-where-you-are",
    "href": "materials/01-intro/slides.html#meeting-you-where-you-are",
    "title": "Quarto\nDocuments",
    "section": "Meeting you where you are",
    "text": "Meeting you where you are\n\n\n\nThese materials are pitched at someone who:\n\nKnows some R or Python\nWants to create outputs that weave text and code\nRelatively new to Quarto\nWants to learn about branded Quarto\n\n\n\n\nWe‚Äôll teach you\n\nWhat Quarto is\nHow to create documents, dashboards, websites, and presentations with Quarto\nHow to brand those Quarto outputs with brand.yml\n\n\n\n\nwe designed this workshop for someone who\nnot assuming you know about Quarto"
  },
  {
    "objectID": "materials/01-intro/slides.html#workshop-structure",
    "href": "materials/01-intro/slides.html#workshop-structure",
    "title": "Quarto\nDocuments",
    "section": "Workshop structure",
    "text": "Workshop structure\n\n\nMy turn\n\nLecture segments\nFeel free to just watch, take notes, browse docs, or tinker around with the code\n\n\n\nYour turn\n\nPractice exercises for you\nWork on your own or with the person next to you"
  },
  {
    "objectID": "materials/01-intro/slides.html#getting-help",
    "href": "materials/01-intro/slides.html#getting-help",
    "title": "Quarto\nDocuments",
    "section": "Getting help",
    "text": "Getting help\n\nStick your post-it note to your laptop\n\nüü• ‚ÄúI‚Äôm stuck and need help!‚Äù\nüü© ‚ÄúI finished the exercise‚Äù\n\nAsk in the Discord channel: #workshop-quarto-brand"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn---about-you",
    "href": "materials/01-intro/slides.html#your-turn---about-you",
    "title": "Quarto\nDocuments",
    "section": "Your turn - About you",
    "text": "Your turn - About you\nIntroduce yourself to your neighbors:\n\nName\nProfessional affiliation\nWhat do you hope to get out of this workshop?\n\n\n\n\n‚àí+\n04:00"
  },
  {
    "objectID": "materials/01-intro/slides.html#section",
    "href": "materials/01-intro/slides.html#section",
    "title": "Quarto\nDocuments",
    "section": "",
    "text": "Quarto is an‚Ä¶\n\nopen-source\n\n\nscientific and technical\n\n\npublishing system\n\n\nbuilt on Pandoc.\n\n\n\nQuarto is an open-source scientific and technical publishing system built on Pandoc. Let‚Äôs break this down: Open-source: Posit believes that it‚Äôs better for everyone if the tools used for research and science are free and open. Free software means more reproducibility, widespread sharing of knowledge and techniques, and elimination of cost barriers. Scientific and technical: Scientific and technical means that Quarto has specific things for journal articles or scientific papers, like support for code execution, citations, footnotes, scientific markdown, equations, citations, crossrefs, so many things. Publishing system: Quarto is a tool for writing dynamic documents that combine code, output, and text. It can embed output from Python, R, Julia, and Observable. Quarto can be rendered to create high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more formats. Pandoc is the tool working behind the scenes to change Quarto documents to their finalized format. Quarto documents are authored with markdown, which is a plain text format. But Pandoc markdown is very rich and lets you control your document in very specific ways while being easy to read and write."
  },
  {
    "objectID": "materials/01-intro/slides.html#with-quarto",
    "href": "materials/01-intro/slides.html#with-quarto",
    "title": "Quarto\nDocuments",
    "section": "With Quarto ‚Ä¶",
    "text": "With Quarto ‚Ä¶\nyou can weave together narrative and code to produce elegantly formatted output such as documents, web pages, blog posts, books, dashboards, and more.\n\nCreate dynamic content with Python, R, Julia, and Observable\nEdit documents in your favorite editor\nPublish technical content in HTML, PDF, MS Word, and more\nShare technical content by publishing to Posit Connect, Confluence, or other publishing systems"
  },
  {
    "objectID": "materials/01-intro/slides.html#display-data-and-results",
    "href": "materials/01-intro/slides.html#display-data-and-results",
    "title": "Quarto\nDocuments",
    "section": "Display data and results",
    "text": "Display data and results\nVote Idaho Election Page by Andrew Heiss (Department of Public Management and Policy, Georgia State University) and the Idaho Secretary of State\n\n\n\n\n\n\nLet‚Äôs see some examples of how people have used Quarto. Andrew Heiss, in conjunction with the Idaho Secretary of State‚Äôs office, created a Quarto website for Idaho‚Äôs primary election results."
  },
  {
    "objectID": "materials/01-intro/slides.html#walk-through-a-story",
    "href": "materials/01-intro/slides.html#walk-through-a-story",
    "title": "Quarto\nDocuments",
    "section": "Walk through a story",
    "text": "Walk through a story\nCouncil Housing & Neighborhood Income Inequality in Vienna by Tamara Premrov and Matthias Schnetzer (European Centre for Social Welfare Policy and Research, Austria)\n\n\n\n\n\n\n\nPosit recently held a Scrollytelling contest. You may have seen articles in newspapers like the New York Times that display visualizations as you scroll through the document. Quarto has an extension called Scrollytelling that lets you create these sorts of stories in Quarto. This one, from folks at the European Centre for Social Welfare Policy and Research which talked about Housing & Neighborhood Income Inequality in Vienna, was one of the winners."
  },
  {
    "objectID": "materials/01-intro/slides.html#publish-papers",
    "href": "materials/01-intro/slides.html#publish-papers",
    "title": "Quarto\nDocuments",
    "section": "Publish papers",
    "text": "Publish papers\n\n\nNavigating Hostility: The Effect of Nonprofit Transparency and Accountability on Donor Preferences in the Face of Shrinking Civic Space by Suparna Chaudhry (Lewis & Clark College, International Justice Lab at College of William & Mary) et al.\n\n\n\n\nQuarto also has extensive features for writing journal articles, from diagrams and technical notation, to being able to publish according to journal standards through extensions."
  },
  {
    "objectID": "materials/01-intro/slides.html#automate-and-reproduce-your-output",
    "href": "materials/01-intro/slides.html#automate-and-reproduce-your-output",
    "title": "Quarto\nDocuments",
    "section": "Automate and reproduce your output",
    "text": "Automate and reproduce your output\nDuplicating Quarto elements with code templates to reduce copy and paste errors by Althea A. Archer (United States Geological Survey)\n\n\nWith Quarto, you can create reports or presentations that update automatically when data changes or when you change inputs because you are creating your report with code. Use variables (parameters) to dynamically change parts of your analysis or report like to generate the same report for different regions, departments, or time periods, write reusable functions to avoid repeating code and keeps work cleaner, more consistent, and easier to maintain. The folks at United States Geological Survey have great blog posts on how they are implementing these ideas in Quarto."
  },
  {
    "objectID": "materials/01-intro/slides.html#get-your-team-on-the-same-page",
    "href": "materials/01-intro/slides.html#get-your-team-on-the-same-page",
    "title": "Quarto\nDocuments",
    "section": "Get your team on the same page",
    "text": "Get your team on the same page\nWe Converted Our Documentation to Quarto by Melissa Van Bussel (Statistics Canada)\n\n\n\n\n\n\nWebsite for R/Python User Group\nTraining resources\nPresentations\n\n\n\nAnd finally, Melissa van Bussel gave a talk on how the Statistics Canada team converted not just their documentation, but training resources, presentations, and more to Quarto to streamline efforts."
  },
  {
    "objectID": "materials/01-intro/slides.html#world-happiness-report",
    "href": "materials/01-intro/slides.html#world-happiness-report",
    "title": "Quarto\nDocuments",
    "section": "World Happiness Report",
    "text": "World Happiness Report\n\n\n\n\n\n\n\n\nThis is what you‚Äôll work on today!\n\n\nhttps://www.worldhappiness.report/\n\n\nworld happiness report combines and analyzes wellbeing data for around 150 countries and writes an annual report. they investigate how happy countries are, how that happiness has changed over time, and what factors explain a country‚Äôs happiness or lack thereof.\ntoday, you‚Äôre going to make reports, dashboards, websites, and presentations with this data."
  },
  {
    "objectID": "materials/01-intro/slides.html#literate-programming",
    "href": "materials/01-intro/slides.html#literate-programming",
    "title": "Quarto\nDocuments",
    "section": "‚ÄúLiterate programming‚Äù",
    "text": "‚ÄúLiterate programming‚Äù\n\n\nall this is possible because Quarto sits inside the broad literate programming world, which mixes narrative in text form with code for formatted outputs like documents and webpages and more. There are lots of literate programming systems that support computation, like R Markdown, Org Mode, Jupyter Book, and now there is Quarto!"
  },
  {
    "objectID": "materials/01-intro/slides.html#why-quarto",
    "href": "materials/01-intro/slides.html#why-quarto",
    "title": "Quarto\nDocuments",
    "section": "Why Quarto?",
    "text": "Why Quarto?\n\nMultilingual and independent of computational systems\nQuarto comes ‚Äúbatteries included‚Äù straight out of the box\nConsistent expression for core features\nExtension system\nEnable ‚Äúsingle-source publishing‚Äù ‚Äî create Word, PDFs, HTML, etc. from one source\nUse defaults that meet accessibility guidelines\n\n\nSo, if there already exist literate programming tools out there, why create a new one? Like mentioned earlier, Quarto was built from the start to support multiple computational systems and ecosystems. You can create presentations, books, websites, and so on after installing Quarto, you do not have to install other tools to create different things. Consistent expression for core features means that regardless of whether you are making a presentation, book, or website, the syntax is written same way. And for things that aren‚Äôt part of base Quarto, there are extensions that can add further functionality. Single-source publishing, you often need to create all sorts of output, like things that are printed, on the web, on the mobile. The idea is to being able to make publications from one source. And the Quarto team thinks deeply about accessibility and how to have Quarto default to meet accessibility guidelines."
  },
  {
    "objectID": "materials/01-intro/slides.html#quarto-formats",
    "href": "materials/01-intro/slides.html#quarto-formats",
    "title": "Quarto\nDocuments",
    "section": "Quarto formats",
    "text": "Quarto formats\n\n\n\n\n\n\n\nFeature\nQuarto\n\n\n\n\nBasic Formats\nhtml, pdf, docx, typst\n\n\nBeamer\nbeamer\n\n\nPowerPoint\npptx\n\n\nHTML Slides\nrevealjs\n\n\nAdvanced Layout\nQuarto Article Layout\n\n\nCross References\nQuarto Crossrefs\n\n\nWebsites & Blogs\nQuarto Websites, Quarto Blogs\n\n\nBooks\nQuarto Books\n\n\nInteractivity\nQuarto Interactive Documents\n\n\nJournal Articles\nJournal Articles\n\n\nDashboards\nQuarto Dashboards"
  },
  {
    "objectID": "materials/01-intro/slides.html#how-it-works",
    "href": "materials/01-intro/slides.html#how-it-works",
    "title": "Quarto\nDocuments",
    "section": "How it works",
    "text": "How it works\nQuarto is a command line interface (CLI) that renders plain text formats (.qmd, .rmd, .md) OR mixed formats (.ipynb/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more.\n\n\n  Usage:   quarto \n  Version: 1.8.24\n\n  Description:\n\n    Quarto CLI\n\n  Options:\n\n    -h, --help     - Show this help.                            \n    -V, --version  - Show the version number for this program.  \n\n  Commands:\n\n    render          [input] [args...]     - Render files or projects to various document types.\n    preview         [file] [args...]      - Render and preview a document or website project.  \n    serve           [input]               - Serve a Shiny interactive document.                \n    create          [type] [commands...]  - Create a Quarto project or extension               \n    create-project  [dir]                 - Create a project for rendering multiple documents  \n    convert         &lt;input&gt;               - Convert documents to alternate representations.    \n    pandoc          [args...]             - Run the version of Pandoc embedded within Quarto.  \n    typst           [args...]             - Run the version of Typst embedded within Quarto.   \n    run             [script] [args...]    - Run a TypeScript, R, Python, or Lua script.        \n    add             &lt;extension&gt;           - Add an extension to this folder or project         \n    install         [target...]           - Installs an extension or global dependency.        \n    publish         [provider] [path]     - Publish a document or project to a provider.       \n    check           [target]              - Verify correct functioning of Quarto installation. \n    help            [command]             - Show this help or the help of a sub-command."
  },
  {
    "objectID": "materials/01-intro/slides.html#under-the-hood",
    "href": "materials/01-intro/slides.html#under-the-hood",
    "title": "Quarto\nDocuments",
    "section": "Under the hood",
    "text": "Under the hood\n\n\njupyter or knitr evaluates Python, Julia, R, or Observable code and returns a .md file along with the evaluated code\nQuarto applies Lua filters + CSS/LaTeX which is then evaluated alongside the .md file by Pandoc and converted to a final output format\n\n\nIllustration by Allison Horst"
  },
  {
    "objectID": "materials/01-intro/slides.html#environment-options",
    "href": "materials/01-intro/slides.html#environment-options",
    "title": "Quarto\nDocuments",
    "section": "Environment options",
    "text": "Environment options\nLet‚Äôs walk through your options for today.\n\nPosit Cloud - RStudio\nGitHub Codespace - VS Code\nLocal installation\n\n\nPosit Cloud has R, RStudio, Quarto, packages, installed. You just need a free account. But I will delete in a few days. If you prefer Python, there is a GitHub Codespace. It takes many minutes to load so please open it up as soon as you can if you‚Äôd like to go this route. The packages will not come preinstalled, but the instructions are on the website. Finally, you can always install Positron, RStudio, or VS Code locally, but you will also need R or Python installed. You‚Äôll also have to install the packages and download the repo materials. And for VS Code, you‚Äôll need to install the Quarto extension. So, if you do not have these set up, I recommend going with Posit Cloud or GitHub Codespace for now, and coming back to the materials after the workshop."
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn",
    "href": "materials/01-intro/slides.html#your-turn",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\nGo to the workshop website and click on Setup in the sidebar.\n\n\npos.it/quarto-brand-conf25\n\n\nFollow the setup instructions at the bottom.\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/01-intro/slides.html#quarto-workflow",
    "href": "materials/01-intro/slides.html#quarto-workflow",
    "title": "Quarto\nDocuments",
    "section": "Quarto workflow",
    "text": "Quarto workflow\n\nOpen a .qmd file.\nPreview/render the document.\nMake a change and preview/render again."
  },
  {
    "objectID": "materials/01-intro/slides.html#renderpreview",
    "href": "materials/01-intro/slides.html#renderpreview",
    "title": "Quarto\nDocuments",
    "section": "Render/preview",
    "text": "Render/preview\n\n\n\n\n\n\n\n\n\n\n\nTerminal\n\nquarto preview\n\n\n\n\nCmd/Ctrl + Shift + K"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn-1",
    "href": "materials/01-intro/slides.html#your-turn-1",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\n\nOpen 01-exercise-r.qmd or 01-exercise-py.qmd.\nPreview/render the document.\n\nPosit Cloud: You may be asked to allow pop-ups.\n\nEdit the title and preview/render again.\n\n\n\n\n‚àí+\n05:00\n\n\n\n\nshow how to add a code chunk\nPositron/vs code insert code cell, cmd shift i RStudio green button, cmd option i"
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n.qmd file format with three components:\n\nYAML: Metadata\nText: Markdown\nCode: R, Python, Observable, and Julia\n\n\nWeave it all together, and you have beautiful, powerful, and useful outputs!\n\nA Quarto document contains three types of content: a YAML header, code chunks, and markdown text."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-1",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-1",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nMetadata: YAML\n\n\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: html\n---\n\n\n\n‚ÄúYet another markup language‚Äù\nMetadata of your document\nDemarcated by three dashes (---) on either end\nUses key-value pairs in the format key: value\n\n\n\nQuarto documents usually start with an (optional) YAML header demarcated by three dashes on either end. The basic syntax of YAML uses key-value pairs in the format key: value. It controls the output of the document and contain metadata for your document. YAML fields commonly found in headers of documents include metadata like author, subtitle, date as well as customization options like theme, fontcolor, fig-width, etc."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-2",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-2",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nText: Markdown\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: html\n---\n\nThis analysis explores the World Happiness Report dataset.\n\n\n\nMarkdown is a lightweight language for creating formatted text\nQuarto is based on Pandoc and uses its variation of markdown as its underlying document syntax\n\n\nMarkdown is a lightweight markup language for creating formatted text using a plain-text editor. Quarto uses markdown syntax for text."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-3",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-3",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nText: Markdown\n\n\nThe `whr_2025.csv` dataset contains data from the [**2025 World Happiness Report**](https://www.worldhappiness.report/).\n\n\n\nThe whr_2025.csv dataset contains data from the 2025 World Happiness Report."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-4",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-4",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nText: Markdown\n\n\n\n\n\n\n\nMarkdown syntax\nOutput\n\n\n\n\n*italics* and **bold**\nitalics and bold\n\n\nsuperscript^2^ / subscript~2~\nsuperscript2 / subscript2\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code"
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-5",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-5",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nCode\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: html\n---\n\nThis analysis uses data from the [**2025 World Happiness Report**](https://www.worldhappiness.report/). \n\n```{python}\nfrom plotnine import ggplot, aes, geom_col\n\n(\n    ggplot(df, aes(x = \"country\", y = \"score\"))\n    + geom_col()\n)\n```"
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-6",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-6",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nCode\n\n\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: html\n---\n\nThis analysis uses data from the [**2025 World Happiness Report**](https://www.worldhappiness.report/). \n\n```{python}\nfrom plotnine import ggplot, aes, geom_col\n\n(\n    ggplot(df, aes(x = \"country\", y = \"score\"))\n    + geom_col()\n)\n```\n\n\n\nCode chunks begin and end with three backticks (usually)\nCode chunks are identified with a programming language in between {}\n\n\n\nCode chunks are identified with three backticks, the language in curly brackets, and can have optional chunk options identified by the hashpipe at the beginning of the line within the chunk."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-7",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-7",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nInline code executes code within Markdown\n\n\nmy-document.qmd\n\n```{python}\ncountries = 147\n```\n\nThe number of countries in the dataset `{python} countries`.\n\nResults in:\nThe number of countries in the dataset is 147."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-8",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-8",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nCode can include optional chunk options, in YAML style, identified by #| at the beginning of the line\n---\ntitle: \"World Happiness Report\"\nformat: html\n---\n\nThis analysis uses data from the [**2025 World Happiness Report**](https://www.worldhappiness.report/). \n\n```{python}\n#| echo: false\nfrom plotnine import ggplot, aes, geom_col\n\n(\n    ggplot(df, aes(x = \"country\", y = \"score\"))\n    + geom_col()\n)\n```\n\nCode chunks can have optional chunk options identified by the hashpipe at the beginning of the line within the chunk."
  },
  {
    "objectID": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-9",
    "href": "materials/01-intro/slides.html#anatomy-of-a-quarto-document-9",
    "title": "Quarto\nDocuments",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\nCode can include optional chunk options, in YAML style, identified by #| at the beginning of the line\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\neval\nEvaluate the code chunk\n\n\necho\nInclude the source code\n\n\nwarning\nInclude warnings\n\n\ninclude\nInclude code and results\n\n\n\nOther options: https://quarto.org/docs/computations/execution-options.html"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn-2",
    "href": "materials/01-intro/slides.html#your-turn-2",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\n\nOpen 01-exercise-r.qmd and run the first three code chunks (in order).\nPreview the file.\nAdd a #| include: false chunk option to the second chunk (global-trends). Preview the file and note the differences.\nIn the YAML, add an author field and add your name. Preview the file.\nChange code-fold to be true. Preview the file.\nEdit the first paragraph to (1) make something bold by surrounding the text with ** and (2) use inline code instead of hardcoded values for the number of countries. You can use the following code to calculate the number of countries.\n\n\nRPython\n\n\n\nlength(unique(whr$country_name))\n\n\n\n\nwhr['country_name'].nunique()\n\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/01-intro/slides.html#images-and-links",
    "href": "materials/01-intro/slides.html#images-and-links",
    "title": "Quarto\nDocuments",
    "section": "Images and links",
    "text": "Images and links\n\n\n\nMarkdown syntax\nOutput\n\n\n\n\n\n&lt;https://quarto.org&gt;\nhttps://quarto.org\n\n\n\n[Quarto](https://quarto.org)\nQuarto\n\n\n\n![](earth.jpg)"
  },
  {
    "objectID": "materials/01-intro/slides.html#tables",
    "href": "materials/01-intro/slides.html#tables",
    "title": "Quarto\nDocuments",
    "section": "Tables",
    "text": "Tables\n```{markdown}\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n```\n\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1"
  },
  {
    "objectID": "materials/01-intro/slides.html#tables-1",
    "href": "materials/01-intro/slides.html#tables-1",
    "title": "Quarto\nDocuments",
    "section": "Tables",
    "text": "Tables\n```{markdown}\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n\n: Table Column Widths {tbl-colwidths=\"[10,30,30,30]\"}\n```\n\nTable Column Widths\n\n\n\n\n\n\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1"
  },
  {
    "objectID": "materials/01-intro/slides.html#divs-and-spans",
    "href": "materials/01-intro/slides.html#divs-and-spans",
    "title": "Quarto\nDocuments",
    "section": "Divs and Spans",
    "text": "Divs and Spans\nFor further customization, you can add classes, attributes, and other identifiers to content using divs and spans.\nDivs\n::: {.border}\nThis adds the \"border\" class to some content. \n:::\nSpans\n[This is some text]{.class key=\"val\"}\n\nFor future customization, you can add classes, attributes, and other identifiers to content using Divs and Spans. Some are built into Quarto, and you can define your own, as well.\n\n\nLearn more: https://quarto.org/docs/authoring/markdown-basics.html#sec-divs-and-spans"
  },
  {
    "objectID": "materials/01-intro/slides.html#divs",
    "href": "materials/01-intro/slides.html#divs",
    "title": "Quarto\nDocuments",
    "section": "Divs",
    "text": "Divs\nCallout blocks\n\n\nmy-document.qmd\n\n:::{.callout-tip}\n\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n\n:::\n\n\n\n\n\n\n\n\nTip\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important.\n\n\n\n\nLearn more: https://quarto.org/docs/authoring/markdown-basics.html#callout-blocks\n\n\nuse callout blocks to draw attention to some information. callouts use the div syntax"
  },
  {
    "objectID": "materials/01-intro/slides.html#divs-1",
    "href": "materials/01-intro/slides.html#divs-1",
    "title": "Quarto\nDocuments",
    "section": "Divs",
    "text": "Divs\nMultiple columns\n\n\nmy-document.qmd\n\n::: {layout-ncol=2}\n\n![](earth.jpg)\n\nPhoto by &lt;a href=\"https://unsplash.com/@nypl?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\"&gt;The New York Public Library&lt;/a&gt; on &lt;a href=\"https://unsplash.com/photos/planet-earth-close-up-photography-yEauzeZU6xo?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\"&gt;Unsplash&lt;/a&gt;\n:::\n\n\n\n\n\n\n\n\nPhoto by The New York Public Library on Unsplash"
  },
  {
    "objectID": "materials/01-intro/slides.html#divs-2",
    "href": "materials/01-intro/slides.html#divs-2",
    "title": "Quarto\nDocuments",
    "section": "Divs",
    "text": "Divs\nTabsets\n\n\nmy-document.qmd\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n`library(dplyr)`\n\n## Python\n\n`import pandas as pd`\n:::\n\n\nRPython\n\n\nlibrary(dplyr)\n\n\nimport pandas as pd"
  },
  {
    "objectID": "materials/01-intro/slides.html#spans",
    "href": "materials/01-intro/slides.html#spans",
    "title": "Quarto\nDocuments",
    "section": "Spans",
    "text": "Spans\n\n\nmy-document.qmd\n\nThis is text that is [red]{style=\"color:red;\"}.\n\nThis is text that is red.\n\nYou can also apply styles to inline text by creating spans. Use square brackets to surround the text and curly brackets for the style you would like."
  },
  {
    "objectID": "materials/01-intro/slides.html#changing-formats",
    "href": "materials/01-intro/slides.html#changing-formats",
    "title": "Quarto\nDocuments",
    "section": "Changing formats",
    "text": "Changing formats\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: html\n---"
  },
  {
    "objectID": "materials/01-intro/slides.html#changing-formats-1",
    "href": "materials/01-intro/slides.html#changing-formats-1",
    "title": "Quarto\nDocuments",
    "section": "Changing formats",
    "text": "Changing formats\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nformat: revealjs\n---\n\n\n\n\n\n\n\n\nYou will see many examples of this throughout the workshop!"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn-3",
    "href": "materials/01-intro/slides.html#your-turn-3",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\n\nAdd an important callout box to the introduction summarizing the report‚Äôs findings.\nIn the first paragraph, link to the World Happiness Report website (https://www.worldhappiness.report/) where it says ‚Äú2025 World Happiness Report‚Äù.\nChange some text to the color \"#eb068c\".\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/01-intro/slides.html#html-theming",
    "href": "materials/01-intro/slides.html#html-theming",
    "title": "Quarto\nDocuments",
    "section": "HTML Theming",
    "text": "HTML Theming\nQuarto includes 25 themes from the Bootswatch project:\n\ndefault\ncerulean\ncosmo\ncyborg\ndarkly\nflatly\njournal\nlitera\nlumen\nlux\nmateria\nminty\nmorph\npulse\nquartz\nsandstone\nsimplex\nsketchy\nslate\nsolar\nspacelab\nsuperhero\nunited\nvapor\nyeti\nzephyr"
  },
  {
    "objectID": "materials/01-intro/slides.html#how-to-apply-html-theming",
    "href": "materials/01-intro/slides.html#how-to-apply-html-theming",
    "title": "Quarto\nDocuments",
    "section": "How to Apply HTML Theming",
    "text": "How to Apply HTML Theming\nProvide the custom theme under theme in the YAML heading:\n\n\nmy-document.qmd\n\n---\ntheme:\n  - flatly\n---"
  },
  {
    "objectID": "materials/01-intro/slides.html#however-we-often-want-a-custom-theme",
    "href": "materials/01-intro/slides.html#however-we-often-want-a-custom-theme",
    "title": "Quarto\nDocuments",
    "section": "However, we often want a custom theme",
    "text": "However, we often want a custom theme\n\n\n\n\n\n\n\nto match your organization‚Äôs or your own personal branding. and you often want to use that same theme over and over, for different kinds of outputs\n\n\nhttps://www.worldhappiness.report/"
  },
  {
    "objectID": "materials/01-intro/slides.html#section-1",
    "href": "materials/01-intro/slides.html#section-1",
    "title": "Quarto\nDocuments",
    "section": "",
    "text": "Unified branding with a simple YAML file\n\n\nCreate reports, apps, dashboards, plots and more that match your company‚Äôs brand guidelines with a single _brand.yml file.\n\nbrand.yml is a simple, portable YAML file that codifies your company‚Äôs brand guidelines into a format that can be used by Quarto, Python and R tooling to create branded outputs. Our goal is to support unified, branded theming for all of Posit‚Äôs open source tools‚Äîfrom web applications to printed reports to dashboards and presentations‚Äîwith a consistent look and feel.\n\n\nLearn more: https://posit-dev.github.io/brand-yml/"
  },
  {
    "objectID": "materials/01-intro/slides.html#section-2",
    "href": "materials/01-intro/slides.html#section-2",
    "title": "Quarto\nDocuments",
    "section": "",
    "text": "Branding can be frustrating\n\n\n\nBut brand.yml makes it easier"
  },
  {
    "objectID": "materials/01-intro/slides.html#section-3",
    "href": "materials/01-intro/slides.html#section-3",
    "title": "Quarto\nDocuments",
    "section": "",
    "text": "1. Define branding in a single _brand.yml file.\n2. Apply that branding across almost all Quarto formats.\n\n\n\nbrand.yml also works with Shiny!"
  },
  {
    "objectID": "materials/01-intro/slides.html#section-4",
    "href": "materials/01-intro/slides.html#section-4",
    "title": "Quarto\nDocuments",
    "section": "",
    "text": "---\nconfig:\n  look: handDrawn\n  theme: neutral\n---\nflowchart LR\n    by{brand.yml}\n    by--&gt;quarto[Quarto]\n    quarto--&gt;quarto-html\n    quarto--&gt;quarto-pdf\n    quarto-html--&gt;quarto-websites[Websites]\n    quarto-html--&gt;quarto-presentations[Presentations]\n    quarto-html--&gt;quarto-dashboards[Dashboards]\n    quarto-html--&gt;quarto-emails[Emails]\n    quarto-pdf--&gt;quarto-typst[Typst]\n\n    by--&gt;R\n    R--&gt;r-bslib[\"{bslib}\"]\n    r-bslib--&gt;r-thematic[\"{thematic}\"]\n    r-bslib--&gt;r-shiny[\"Shiny for R\"]\n    r-bslib--&gt;r-rmd[\"R Markdown\"]\n    r-bslib--&gt;r-pkgdown[\"pkgdown\"]\n    %% r-thematic--&gt;r-ggplot2[\"{ggplot2}\"]\n    %% r-thematic--&gt;r-plot[\"{plot}\"]\n\n    by--&gt;Python\n    Python--&gt;py-brand_yml[\"brand_yml\"]\n    py-brand_yml--&gt;py-shiny[Shiny for Python]\n    py-brand_yml--&gt;py-plots[seaborn, matplotlib, etc.]\n\n    classDef implemented fill:#8CE3A0,stroke:#0A2911,color:#0A2911;\n    classDef partial fill:#A8E5B9,stroke:#4B8A5D,color:#0A2911;\n    classDef in-progress fill:#B3D7FF,stroke:#00254D,color:#00254D;\n    classDef highlighted fill:#FFE8DB,stroke:#612200,color:#612200;\n\n    class quarto-websites,quarto-presentations,quarto-dashboards,quarto-typst,py-brand_yml,py-shiny,r-bslib,r-shiny,r-rmd,r-pkgdown implemented;\n    class r-thematic,py-plots partial;\n    class by highlighted;\n\n    click quarto href \"https://prerelease.quarto.org/docs/authoring/brand.html\"\n    click quarto-typst href \"https://quarto.org/docs/output-formats/typst.html\" \"Typst in Quarto\"\n    click quarto-presentations href \"https://quarto.org/docs/presentations/revealjs/\" \"Reveal.js in Quarto\"\n    click quarto-dashboards href \"https://quarto.org/docs/dashboards/\" \"Dashboards in Quarto\"\n    click r-shiny href \"https://shiny.posit.co/\"\n    click r-bslib href \"https://rstudio.github.io/bslib/\"\n    click r-thematic href \"https://rstudio.github.io/thematic/\"\n    click r-ggplot2 href \"https://ggplot2.tidyverse.org/\"\n    click r-rmd href \"https://rmarkdown.rstudio.com/\"\n    click py-shiny href \"https://shiny.posit.co/py/\"\n    click py-brand_yml href \"pkg/py/\"\n\n\n\n\n\n\n\n\n\nLearn more: https://posit-dev.github.io/brand-yml/\n\n\nbrand.yml works with a variety of open source projects, including all the Quarto outputs we‚Äôll talk about today. as well as Shiny for R and Shiny for Python. This means you can define your organization‚Äôs branding in a brand.yml file once, and then apply it all over relatively effortlessly.\nover the course of this workshop, we‚Äôll use the same brand file to apply to all our outputs"
  },
  {
    "objectID": "materials/01-intro/slides.html#brand.yml-elements",
    "href": "materials/01-intro/slides.html#brand.yml-elements",
    "title": "Quarto\nDocuments",
    "section": "brand.yml elements",
    "text": "brand.yml elements\n\nmeta: Identifying information, name of the company, URLs, etc.\nlogo: Files or links to the brand‚Äôs logos.\ncolor: Colors in the brand‚Äôs color palette.\ntypography: Fonts for different elements.\ndefaults: Additional context-specific settings."
  },
  {
    "objectID": "materials/01-intro/slides.html#brand.yml-structure",
    "href": "materials/01-intro/slides.html#brand.yml-structure",
    "title": "Quarto\nDocuments",
    "section": "_brand.yml structure",
    "text": "_brand.yml structure\n\n\n_brand.yml\n\nmeta:\n  name: World Happiness Report\n  link:\n    home: https://www.worldhappiness.report/\n\nlogo:\n  images:\n    icon:\n      path: images/whr_logo.png\n      alt: World Happiness Report icon.\n  small: images/whr_logo.png\n\ncolor:\n  palette:\n    dark-purple: \"#93358c\"\n    light-purple: \"#f8f6fb\"\n    teal: \"#04afaf\"\n    dark-blue: \"#086992\"\n    hot-pink: \"#eb068c\"\n    light-blue: \"#1aade4\"\n\n  background: light-purple\n  foreground: black\n  primary: dark-purple\n  secondary: hot-pink\n  tertiary: light-blue\n  dark: black\n\ntypography:\n  fonts:\n    - family: Libre Franklin\n      source: google\n      weight: [400, 700]\n\n  base:\n    family: Libre Franklin\n    weight: 400\n\n  headings:\n    family: Libre Franklin\n    weight: 700\n    color: dark-purple\n\n  link:\n    color: primary\n    decoration: none\n\n\ndefine your brand‚Äôs color palette and map your palette to the roles colors play. the semantic colors ‚Äì primary, foreground, etc\nif this seems like a lot of details, don‚Äôt worry! we will show you how to make your own file later. for now, it‚Äôs enough to just have a general understanding of the different parts"
  },
  {
    "objectID": "materials/01-intro/slides.html#how-to-apply-brand.yml-to-quarto",
    "href": "materials/01-intro/slides.html#how-to-apply-brand.yml-to-quarto",
    "title": "Quarto\nDocuments",
    "section": "How to apply brand.yml to Quarto",
    "text": "How to apply brand.yml to Quarto\n\nDefine branding in _brand.yml.\nSave in the root directory of your Quarto project.\n\nQuarto will detect the presence of _brand.yml and automatically apply the brand to all documents of the supported formats in the project."
  },
  {
    "objectID": "materials/01-intro/slides.html#section-5",
    "href": "materials/01-intro/slides.html#section-5",
    "title": "Quarto\nDocuments",
    "section": "",
    "text": "If your brand file has a different name or lives in a subdirectory, use the brand key.\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nsubtitle: \"Happiness Trends and Contributing Factors (2011-2024)\"\nformat: html\nbrand: org_theme.yml\n---\n\n\nuse this if you have a file named something other than brand.yml or it lives elsewhere."
  },
  {
    "objectID": "materials/01-intro/slides.html#disable-brand.yml",
    "href": "materials/01-intro/slides.html#disable-brand.yml",
    "title": "Quarto\nDocuments",
    "section": "Disable brand.yml",
    "text": "Disable brand.yml\nTo turn off brand.yml for a document, use brand: false.\n\n\nmy-document.qmd\n\n---\ntitle: \"World Happiness Report\"\nsubtitle: \"Happiness Trends and Contributing Factors (2011-2024)\"\nformat: html\nbrand: false\n---"
  },
  {
    "objectID": "materials/01-intro/slides.html#brand-shortcode",
    "href": "materials/01-intro/slides.html#brand-shortcode",
    "title": "Quarto\nDocuments",
    "section": "brand shortcode",
    "text": "brand shortcode\nAccess some brand.yml values with a shortcode.\n\n\nmy_document.qmd\n\n{{&lt; brand color primary &gt;}}\n\n\nLearn more: https://quarto.org/docs/authoring/brand.html#using-brand-values\n\n\nyou‚Äôll see an example of this during the presentations section"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn-4",
    "href": "materials/01-intro/slides.html#your-turn-4",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\n\nIn the workshop repo, there‚Äôs a file named 04-exercise.yml. Rename the file to _brand.yml and rerender your Quarto document. What changes?\nChange some of the variables in the _brand.yml file and rerender to see how your theme changes. You can reset the file by copying and pasting it from here.\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/01-intro/slides.html#what-about-plots",
    "href": "materials/01-intro/slides.html#what-about-plots",
    "title": "Quarto\nDocuments",
    "section": "What about plots?",
    "text": "What about plots?\n\n\nThe plots, at least for the R version, are unbranded. how can we apply brand.yml to plots too?"
  },
  {
    "objectID": "materials/01-intro/slides.html#theme-helpers",
    "href": "materials/01-intro/slides.html#theme-helpers",
    "title": "Quarto\nDocuments",
    "section": "Theme helpers",
    "text": "Theme helpers\nThe quarto packages contain theme helpers that apply branding to plots.\n\nRPython\n\n\n\nlibrary(quarto)\n\nmy_theme &lt;- theme_brand_ggplot2(\"_brand.yml\")\n\n\n\n\nfrom quarto import theme_brand_plotnine\n\nmy_theme = theme_brand_plotnine('_brand.yml')\n\n\n\n\n\n\nThere are other theme helpers for other plotting libraries\n\n\nR: https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html\nPython: https://github.com/quarto-dev/quarto-python?tab=readme-ov-file#theme-helpers"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn-5",
    "href": "materials/01-intro/slides.html#your-turn-5",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\n\nRPython\n\n\n\nIn the first code chunk of 01-exercise-r.qmd, replace theme_minimal() with theme_brand_ggplot2(). You will need to supply a brand file path (\"_brand.yml\").\nRe-render and see what changes.\n\n\n\n\nIn the first code chunk of 01-exercise-python.qmd, add theme_brand_plotnine() right after theme_minimal(). You will need to supply a brand file path (\"_brand.yml\").\nRe-render. Does anything change? What if you change foreground in _brand.yml to hot-pink? Re-render with and without theme_brand_plotnine().\n\n\n\n\n\n\n\n‚àí+\n05:00\n\n\n\n\nThe R function applies theme_minimal()."
  },
  {
    "objectID": "materials/01-intro/slides.html#brand.yml-packages",
    "href": "materials/01-intro/slides.html#brand.yml-packages",
    "title": "Quarto\nDocuments",
    "section": "brand.yml packages",
    "text": "brand.yml packages\nAccess and apply specific brand elements.\n\nRPython\n\n\n\nlibrary(brand.yml)\n\nbrand &lt;- read_brand_yml(\"_brand.yml\")\n\nbrand$color$primary\n\n\n\n\nfrom brand_yml import Brand\n\nbrand = Brand.from_yaml(\"_brand.yml\")\n\nbrand.color.primary"
  },
  {
    "objectID": "materials/01-intro/slides.html#brand.yml-packages-1",
    "href": "materials/01-intro/slides.html#brand.yml-packages-1",
    "title": "Quarto\nDocuments",
    "section": "brand.yml packages",
    "text": "brand.yml packages\nUse the R or Python brand.yml package to create a brand file from a string.\n\nRPython\n\n\n\nlibrary(brand.yml)\n\nas_brand_yml(\"\n  meta:\n    name: Example Brand\n\n  color:\n    primary: '#FF5733'\n    secondary: '#33FF57'\n\")\n\n\n\n\nfrom brand_yml import Brand\n\nbrand = Brand.from_yaml_str(\n  \"\"\"\n  meta:\n    name: Example Brand\n\n  color:\n    primary: '#FF5733'\n    secondary: '#33FF57'\n  \"\"\"\n)"
  },
  {
    "objectID": "materials/01-intro/slides.html#your-turn-6",
    "href": "materials/01-intro/slides.html#your-turn-6",
    "title": "Quarto\nDocuments",
    "section": "Your turn",
    "text": "Your turn\n\nRead in _brand.yml with read_brand_yml() (R) or Brand.from_yaml() (Python) to a variable named brand.\nChange the color of the points and line in the global trends plot to the brand‚Äôs teal color. Use code like the following.\n\n(Make sure to first remove #| include: false from the chunk, if it‚Äôs still there).\n\nRPython\n\n\n\ngeom_line(color = brand$color$palette$blue)\n\n\n\n\ngeom_line(color = brand.color.palette.blue)\n\n\n\n\n\n\n\n‚àí+\n05:00\n\n\n\n\nif there‚Äôs time, go over this\nthe r function automatically applies theme_minimal()"
  },
  {
    "objectID": "materials/01-intro/slides.html#why-brand.yml",
    "href": "materials/01-intro/slides.html#why-brand.yml",
    "title": "Quarto\nDocuments",
    "section": "Why brand.yml?",
    "text": "Why brand.yml?\n\nConsistent branding with minimal effort.\nCommon syntax across different outputs. Reduces duplication.\nEasy collaboration."
  },
  {
    "objectID": "materials/01-intro/exercise-05.html",
    "href": "materials/01-intro/exercise-05.html",
    "title": "",
    "section": "",
    "text": "RPython\n\n\n\nIn the first code chunk of 01-exercise-r.qmd, replace theme_minimal() with theme_brand_ggplot2(). You will need to supply a brand file path (\"_brand.yml\").\nRe-render and see what changes.\n\n\n\n\nIn the first code chunk of 01-exercise-python.qmd, add theme_brand_plotnine() right after theme_minimal(). You will need to supply a brand file path (\"_brand.yml\").\nRe-render. Does anything change? What if you change foreground in _brand.yml to hot-pink? Re-render with and without theme_brand_plotnine()."
  },
  {
    "objectID": "materials/01-intro/exercise-06.html",
    "href": "materials/01-intro/exercise-06.html",
    "title": "",
    "section": "",
    "text": "Read in _brand.yml with read_brand_yml() (R) or Brand.from_yaml() (Python) to a variable named brand.\nChange the color of the points and line in the global trends plot to the brand‚Äôs teal color. Use code like the following.\n\n(Make sure to first remove #| include: false from the chunk, if it‚Äôs still there).\n\nRPython\n\n\n\ngeom_line(color = brand$color$palette$blue)\n\n\n\n\ngeom_line(color = brand.color.palette.blue)"
  },
  {
    "objectID": "materials/01-intro/exercise-02.html",
    "href": "materials/01-intro/exercise-02.html",
    "title": "",
    "section": "",
    "text": "Open 01-exercise-r.qmd and run the first three code chunks (in order).\nPreview the file.\nAdd a #| include: false chunk option to the second chunk (global-trends). Preview the file and note the differences.\nIn the YAML, add an author field and add your name. Preview the file.\nChange code-fold to be true. Preview the file.\nEdit the first paragraph to (1) make something bold by surrounding the text with ** and (2) use inline code instead of hardcoded values for the number of countries. You can use the following code to calculate the number of countries.\n\n\nRPython\n\n\n\nlength(unique(whr$country_name))\n\n\n\n\nwhr['country_name'].nunique()"
  },
  {
    "objectID": "materials/07-customization/slides.html#lightdark-mode",
    "href": "materials/07-customization/slides.html#lightdark-mode",
    "title": "Extracustomization",
    "section": "Light/dark mode",
    "text": "Light/dark mode\n\n\n\n\n_brand.yml\n\ncolor:\n  foreground:\n    light: \"#111111\" \n    dark: \"#fafafa\" \n  background:\n    light: \"#FFFFFF\" \n    dark: \"#222222\"\n\n\nVideo\n\n\nquarto will automatically add a light/dark toggle"
  },
  {
    "objectID": "materials/07-customization/slides.html#sass",
    "href": "materials/07-customization/slides.html#sass",
    "title": "Extracustomization",
    "section": "Sass",
    "text": "Sass\nIf you want extra customizations.\nQuarto will compile it for any format (with or without _brand.yml)."
  },
  {
    "objectID": "materials/07-customization/slides.html#sass-variables",
    "href": "materials/07-customization/slides.html#sass-variables",
    "title": "Extracustomization",
    "section": "Sass variables",
    "text": "Sass variables\nThere are a variety of Sass variables you can set within a .scss file for Quarto, including:\n\nColors: $body-bg, $body-color, etc.\nFonts: $toc-font-size, $font-family-sans-serif, etc.\nCode blocks: $code-block-border-left, $code-block-bg.\n\n\nLearn more: https://quarto.org/docs/output-formats/html-themes.html#sass-variables"
  },
  {
    "objectID": "materials/07-customization/slides.html#sass-variables-1",
    "href": "materials/07-customization/slides.html#sass-variables-1",
    "title": "Extracustomization",
    "section": "Sass variables",
    "text": "Sass variables\nThere are a variety of Sass variables you can set within a .scss file for Quarto, including:\n\nColors: $body-bg, $body-color, etc.\nFonts: $toc-font-size, $font-family-sans-serif, etc.\nCode blocks: $code-block-border-left, $code-block-bg.\n\nMany of these features can also be set in _brand.yml.\n\nLearn more: https://quarto.org/docs/output-formats/html-themes.html#sass-variables"
  },
  {
    "objectID": "materials/07-customization/slides.html#scss-file",
    "href": "materials/07-customization/slides.html#scss-file",
    "title": "Extracustomization",
    "section": ".scss file",
    "text": ".scss file\n\n\nstyles.scss\n\n/*-- scss:functions --*/\n@function colorToRGB ($color) {\n  @return \"rgb(\" + red($color) + \", \" + green($color) + \", \" + blue($color)+ \")\";\n}\n\n/*-- scss:defaults --*/\n$h2-font-size:          1.6rem !default;\n$headings-font-weight:  500 !default;\n\n/*-- scss:rules --*/\nh1, h2, h3, h4, h5, h6 {\n  text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);\n}\n\n\nyou can define sass variables and write css in scss files\n\n\nLearn more: https://quarto.org/docs/output-formats/html-themes-more.html"
  },
  {
    "objectID": "materials/07-customization/slides.html#specify-the-.scss-file-in-the-theme-field",
    "href": "materials/07-customization/slides.html#specify-the-.scss-file-in-the-theme-field",
    "title": "Extracustomization",
    "section": "Specify the .scss file in the theme field",
    "text": "Specify the .scss file in the theme field\n\n\nmy-document.qmd\n\n---\ntitle: \"My document\"\nformat: \n    html:\n        theme: styles.scss\n---"
  },
  {
    "objectID": "materials/07-customization/slides.html#sass-and-brand.yml",
    "href": "materials/07-customization/slides.html#sass-and-brand.yml",
    "title": "Extracustomization",
    "section": "Sass and brand.yml",
    "text": "Sass and brand.yml\nIf you‚Äôre already using _brand.yml, you can use a .scss file to further customize your theme, beyond brand.yml‚Äôs limits, or to override elements of your brand file. For example:\n\nAdd a drop-shadow to cards\nSpecify the color of blockquotes\nFurther style the navbar"
  },
  {
    "objectID": "materials/07-customization/slides.html#sass-and-brand.yml-1",
    "href": "materials/07-customization/slides.html#sass-and-brand.yml-1",
    "title": "Extracustomization",
    "section": "Sass and brand.yml",
    "text": "Sass and brand.yml\nIf you‚Äôre already using _brand.yml, you can use a .scss file to further customize your theme, beyond brand.yml‚Äôs limits, or to override elements of your brand file. For example:\n\nAdd a drop-shadow to cards\nSpecify the color of blockquotes\nSet different header levels to different colors\nFurther style the navbar"
  },
  {
    "objectID": "materials/07-customization/slides.html#sass-and-brand.yml-2",
    "href": "materials/07-customization/slides.html#sass-and-brand.yml-2",
    "title": "Extracustomization",
    "section": "Sass and brand.yml",
    "text": "Sass and brand.yml\nThe colors defined in the brand.yml palette are available as Sass with the format $brand-COLOR_NAME.\n\n\nstyles.scss\n\n/*-- scss:rules --*/\n\nh1 {\n  color: $brand-blue;\n}\n\nh2 {\n  color: $brand-green\n}"
  },
  {
    "objectID": "materials/07-customization/slides.html#sass-and-brand.yml-3",
    "href": "materials/07-customization/slides.html#sass-and-brand.yml-3",
    "title": "Extracustomization",
    "section": "Sass and brand.yml",
    "text": "Sass and brand.yml\nThe colors defined in the brand.yml palette are available as Sass with the format brand-COLOR_NAME.\n\n\nstyles.scss\n\n/*-- scss:rules --*/\n\nh1 {\n  color: $brand-blue;\n}\n\nh2 {\n  color: $brand-green\n}"
  },
  {
    "objectID": "materials/07-customization/slides.html#priority",
    "href": "materials/07-customization/slides.html#priority",
    "title": "Extracustomization",
    "section": "Priority",
    "text": "Priority\n\n\nmy-document.qmd\n\n---\ntitle: \"My document\"\nformat: \n    html:\n        theme: styles.scss\n---\n\nstyles.scss has priority over _brand.yml"
  },
  {
    "objectID": "materials/07-customization/slides.html#priority-1",
    "href": "materials/07-customization/slides.html#priority-1",
    "title": "Extracustomization",
    "section": "Priority",
    "text": "Priority\n\n\nmy-document.qmd\n\n---\ntitle: \"My document\"\nformat: \n    html:\n        theme: [cosmo, brand, styles.scss]\n---\n\nstyles.scss &gt; _brand.yml &gt; cosmo"
  },
  {
    "objectID": "materials/07-customization/slides.html#defaults",
    "href": "materials/07-customization/slides.html#defaults",
    "title": "Extracustomization",
    "section": "Defaults",
    "text": "Defaults\nYou can also set Bootstrap Sass variables under defaults in brand.yml.\n\n\n_brand.yml\n\ncolor:\n  palette:\n    blue: \"#447099\"\n    burgundy: \"#9A4665\"\n  primary: burgundy\n  foreground: blue\n\ndefaults:\n  bootstrap:\n    defaults:\n      navbar-bg: $brand-blue\n\n\nLearn more: https://posit-dev.github.io/brand-yml/brand/defaults.html"
  },
  {
    "objectID": "materials/07-customization/slides.html#learn-more",
    "href": "materials/07-customization/slides.html#learn-more",
    "title": "Extracustomization",
    "section": "Learn more",
    "text": "Learn more\n\nQuarto website\nbrand.yml website\nQuarto-specific brand.yml docs"
  },
  {
    "objectID": "materials/07-customization/slides.html#your-turn",
    "href": "materials/07-customization/slides.html#your-turn",
    "title": "Extracustomization",
    "section": "Your turn",
    "text": "Your turn\nContinue working on your own Quarto project and _brand.yml!"
  },
  {
    "objectID": "materials/07-customization/slides.html#survey",
    "href": "materials/07-customization/slides.html#survey",
    "title": "Extracustomization",
    "section": "Survey",
    "text": "Survey"
  },
  {
    "objectID": "materials/07-customization/slides.html#section",
    "href": "materials/07-customization/slides.html#section",
    "title": "Extracustomization",
    "section": "",
    "text": "Thank you!"
  },
  {
    "objectID": "materials/02-presentations/slides.html#file-formats",
    "href": "materials/02-presentations/slides.html#file-formats",
    "title": "Presentations with reveal.js",
    "section": "File formats",
    "text": "File formats\nQuarto supports a variety of formats for creating presentations, including:\n\nrevealjs\npptx\nbeamer\n\n\nbrand.yml is currently supported only in revealjs.\n\nQuarto supports several popular presentation formats, as you can see here. We have reveal.js, which is what we‚Äôll be focusing on today, but also pptx for Microsoft PowerPoint and beamer for LaTeX. While all of these are great, reveal.js offers a unique level of customization and interactivity, especially when it comes to web-based content. And for those of you who work with branding, it‚Äôs the only one that currently supports the brand.yml file, which we‚Äôll discuss later."
  },
  {
    "objectID": "materials/02-presentations/slides.html#reveal.js",
    "href": "materials/02-presentations/slides.html#reveal.js",
    "title": "Presentations with reveal.js",
    "section": "reveal.js",
    "text": "reveal.js\nreveal.js presentations allow you to create stunning presentations on the web.\n\nPresent code and LaTeX equations\nInclude computations in slide output\nAdd image, video, and iFrame backgrounds\nAdd fancy transitions and animations\nActivate scroll view\n\n‚Ä¶and much more\n\nWhat makes reveal.js so cool? It‚Äôs all about creating stunning, modern presentations that live on the web. It‚Äôs fantastic for technical presentations because it handles code and LaTeX equations beautifully. You can even include live computations and interactive content directly in your slides. It also supports fancy transitions, animations, and a unique scroll view for long-form content, allowing you to create engaging and dynamic presentations for any topic."
  },
  {
    "objectID": "materials/02-presentations/slides.html#converting-to-reveal.js",
    "href": "materials/02-presentations/slides.html#converting-to-reveal.js",
    "title": "Presentations with reveal.js",
    "section": "Converting to reveal.js",
    "text": "Converting to reveal.js\nConvert your document to a reveal.js presentation by editing format in the YAML heading:\nformat: revealjs\n\nLearn more: Revealjs\n\n\nTo convert your Quarto document, all you need to do is change one line in the YAML header. Change the format from html or pdf to revealjs. Quarto handles all the heavy lifting for you."
  },
  {
    "objectID": "materials/02-presentations/slides.html#example",
    "href": "materials/02-presentations/slides.html#example",
    "title": "Presentations with reveal.js",
    "section": "Example",
    "text": "Example\n\n\n---\ntitle: \"Habits\"\nauthor: \"John Doe\"\nformat: html\n---\n\n## Getting up\n\n- Turn off alarm\n- Get out of bed\n\n## Going to sleep\n\n- Get in bed\n- Count sheep\n\n\n\n\nOn the left, we have a basic Quarto document with two sections. On the right, you can see how it‚Äôs rendered as a simple HTML document. This is what you‚Äôd get by default if you set the format to html."
  },
  {
    "objectID": "materials/02-presentations/slides.html#example-1",
    "href": "materials/02-presentations/slides.html#example-1",
    "title": "Presentations with reveal.js",
    "section": "Example",
    "text": "Example\n\n\n---\ntitle: \"Habits\"\nauthor: \"John Doe\"\nformat: revealjs\n---\n\n## Getting up\n\n- Turn off alarm\n- Get out of bed\n\n## Going to sleep\n\n- Get in bed\n- Count sheep\n\n\n\n\nNow, let‚Äôs change the format to revealjs in the YAML header. See the difference on the right? The same content is now formatted as a slide deck, with each top-level heading (##) becoming a new slide. This demonstrates the core principle of Quarto presentations: you write your content, and Quarto formats it for you."
  },
  {
    "objectID": "materials/02-presentations/slides.html#example-with-sections",
    "href": "materials/02-presentations/slides.html#example-with-sections",
    "title": "Presentations with reveal.js",
    "section": "Example with sections",
    "text": "Example with sections\n\n\n---\ntitle: \"Habits\"\nauthor: \"John Doe\"\nformat: revealjs\n---\n\n# In the morning\n\n## Getting up\n\n- Turn off alarm\n- Get out of bed\n\n## Breakfast\n\n- Eat eggs\n- Drink coffee\n\n# In the evening\n\n## Dinner\n\n- Eat spaghetti\n- Drink wine\n\n## Going to sleep\n\n- Get in bed\n- Count sheep\n\n\n\n\nYou can also create a multi-level slide structure. By using a top-level heading (#), you create a new vertical section. Any sub-headings (##) below it will become a vertical sequence of slides. This is a great way to organize your presentation and create logical sections, just like you would with a regular document."
  },
  {
    "objectID": "materials/02-presentations/slides.html#example-with-sections-1",
    "href": "materials/02-presentations/slides.html#example-with-sections-1",
    "title": "Presentations with reveal.js",
    "section": "Example with sections",
    "text": "Example with sections\n\n\n---\ntitle: \"Habits\"\nauthor: \"John Doe\"\nformat: revealjs\n---\n\n- Turn off alarm\n- Get out of bed\n\n---\n\n- Get in bed\n- Count sheep\n\n\n\n\nHere‚Äôs another way to create a new slide. The horizontal rule (‚Äî) acts as a slide break. This is useful for splitting up content on a single page, like a list, into multiple slides."
  },
  {
    "objectID": "materials/02-presentations/slides.html#your-turn",
    "href": "materials/02-presentations/slides.html#your-turn",
    "title": "Presentations with reveal.js",
    "section": "Your turn",
    "text": "Your turn\n\nIn your document‚Äôs YAML header, change format: html to format: revealjs.\nUse first-level headings (#) to create a new slide. Use other Markdown headings and text for content on each slide.\nSave and render your document.\n\nQuarto will create an HTML file that is a fully functional slide deck.\n\n\n\n\n\n\nNote\n\n\nYou can remove code-fold and code-summary from the YAML header, as these are for HTML documents and do not apply to presentations.\n\n\n\n\n\n\n‚àí+\n05:00\n\n\n\n\nAlright, your turn to try! Take five minutes to practice what we‚Äôve just covered. The exercise is on your screen. The goal is just to get your hands dirty with the basic syntax."
  },
  {
    "objectID": "materials/02-presentations/slides.html#editing-slides",
    "href": "materials/02-presentations/slides.html#editing-slides",
    "title": "Presentations with reveal.js",
    "section": "Editing slides",
    "text": "Editing slides\nThe quarto-revealjs-editable extension allows for the repositioning and resizing of images and text divs directly in previewed slides.\n\n\nLearn more: quarto-revealjs-editable\n\n\nA great tool for fine-tuning your presentation is the quarto-revealjs-editable extension by Emil Hvitfeldt. It allows you to drag and drop text and images right on the slide preview to reposition and resize them. This saves a lot of time by eliminating the need to manually adjust positions in your source code."
  },
  {
    "objectID": "materials/02-presentations/slides.html#content-overflow",
    "href": "materials/02-presentations/slides.html#content-overflow",
    "title": "Presentations with reveal.js",
    "section": "Content overflow",
    "text": "Content overflow\nUse the .smaller class to use a smaller typeface so that more text fits on the slide. For example:\n## Slide Title {.smaller}\nUse the .scrollable class to make off-slide content available by scrolling. For example:\n## Slide Title {.scrollable}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nNullam sagittis ex eget bibendum vulputate.\n\nVestibulum lobortis mauris sed lorem auctor, in commodo ex semper.\nVestibulum congue nisl eget blandit suscipit.\nCurabitur sit amet diam elementum, dictum massa quis, vulputate est.\nSed dignissim lacus et lorem pellentesque interdum.\nUt efficitur eros id leo condimentum, vel sodales velit lacinia.\n\nVivamus cursus massa accumsan tellus imperdiet aliquet id et odio.\nDuis tincidunt nunc vitae erat sollicitudin, non condimentum enim eleifend.\nPhasellus ac ligula aliquam, aliquet nunc quis, tempor libero.\nVivamus ultricies enim a metus ultrices, a pretium velit tristique.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nNullam sagittis ex eget bibendum vulputate.\n\nVestibulum lobortis mauris sed lorem auctor, in commodo ex semper.\nVestibulum congue nisl eget blandit suscipit.\nCurabitur sit amet diam elementum, dictum massa quis, vulputate est.\nSed dignissim lacus et lorem pellentesque interdum.\nUt efficitur eros id leo condimentum, vel sodales velit lacinia.\n\nVivamus cursus massa accumsan tellus imperdiet aliquet id et odio.\nDuis tincidunt nunc vitae erat sollicitudin, non condimentum enim eleifend.\nPhasellus ac ligula aliquam, aliquet nunc quis, tempor libero.\nVivamus ultricies enim a metus ultrices, a pretium velit tristique.\n\nWhat do you do when you have too much content for a single slide? Quarto offers two easy solutions. You can use the .smaller class to shrink the font size and fit more text on the slide, or you can use the .scrollable class to make the content scrollable. You can add these classes to any heading."
  },
  {
    "objectID": "materials/02-presentations/slides.html#slide-transitions",
    "href": "materials/02-presentations/slides.html#slide-transitions",
    "title": "Presentations with reveal.js",
    "section": "Slide transitions",
    "text": "Slide transitions\nEdit the YAML to change the slide transitions:\n---\ntitle: \"Presentation\"\nformat:\n  revealjs:\n    transition: slide\n    transition-speed: fast\n---\n\nLearn more: Slide Transitions\n\n\nYou can control the slide transitions directly from the YAML header."
  },
  {
    "objectID": "materials/02-presentations/slides.html#slide-transitions-1",
    "href": "materials/02-presentations/slides.html#slide-transitions-1",
    "title": "Presentations with reveal.js",
    "section": "Slide transitions",
    "text": "Slide transitions\nThe next few slides will transition using the slide transition\n\n\n\n\n\n\n\nTransition\nDescription\n\n\n\n\nnone\nNo transition (default, switch instantly)\n\n\nfade\nCross fade\n\n\nslide\nSlide horizontally\n\n\nconvex\nSlide at a convex angle\n\n\nconcave\nSlide at a concave angle\n\n\nzoom\nScale the incoming slide so it grows in from the center of the screen.\n\n\n\n\nHere‚Äôs a list of the available transitions. As you can see, the default is none, which is an instant switch, but you can also use fade, slide, convex, concave, or zoom. We‚Äôll use the slide transition for the next few slides so you can see it in action."
  },
  {
    "objectID": "materials/02-presentations/slides.html#tabsets",
    "href": "materials/02-presentations/slides.html#tabsets",
    "title": "Presentations with reveal.js",
    "section": "Tabsets",
    "text": "Tabsets\n\nPlotDataTabset Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n\n::: panel-tabset\n### Plot\n\n```{r}\nlibrary(ggplot2)\nggplot(mtcars, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\")\n```\n\n### Data\n\n```{r}\nknitr::kable(mtcars)\n```\n:::\n\n\n\n\nTabsets are a fantastic way to organize multiple types of content on a single slide without cluttering it. You can switch between different tabs to view a plot, a table, or any other content you want. This is especially useful for showing data and the code that generated it.\n\n\nLearn more: Tabsets"
  },
  {
    "objectID": "materials/02-presentations/slides.html#column-layout",
    "href": "materials/02-presentations/slides.html#column-layout",
    "title": "Presentations with reveal.js",
    "section": "Column layout",
    "text": "Column layout\nArrange content into columns of varying widths:\n\n\nMotor Trend Car Road Tests\nThe data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles.\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\nwt\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n2.620\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n2.875\n\n\nDatsun 710\n22.8\n4\n108\n93\n2.320\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.215\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.440\n\n\nValiant\n18.1\n6\n225\n105\n3.460\n\n\n\n\n\n\n\nLearn more: Multiple Columns\n\n\nQuarto also offers a flexible column layout. You can create columns of varying widths to present your content in a more visually appealing way. Here, we‚Äôve used columns to show a description on the left and a data table on the right. This is much better than trying to squeeze everything into a single-column layout."
  },
  {
    "objectID": "materials/02-presentations/slides.html#column-layout-1",
    "href": "materials/02-presentations/slides.html#column-layout-1",
    "title": "Presentations with reveal.js",
    "section": "Column layout",
    "text": "Column layout\nArrange content into columns of varying widths:\n::: columns\n::: {.column width=\"35%\"}\n#### Motor Trend Car Road Tests\n\nThe data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles.\n:::\n\n::: {.column width=\"3%\"}\n:::\n\n::: {.column width=\"62%\"}\n```{r}\nknitr::kable(head(mtcars)[,c(\"mpg\", \"cyl\", \"disp\", \"hp\", \"wt\")])\n```\n:::\n:::"
  },
  {
    "objectID": "materials/02-presentations/slides.html#line-highlighting",
    "href": "materials/02-presentations/slides.html#line-highlighting",
    "title": "Presentations with reveal.js",
    "section": "Line highlighting",
    "text": "Line highlighting\n\nHighlight specific lines for emphasis\nIncrementally highlight additional lines\n\n``` {.python code-line-numbers=\"4-5|7|10\"}\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\nLearn more: Line Highlighting\n\n\nFor those of you presenting code, this feature is a game-changer. You can highlight specific lines of code to draw attention to them, or even incrementally highlight additional lines. This helps your audience follow along and focus on the parts of the code you‚Äôre talking about."
  },
  {
    "objectID": "materials/02-presentations/slides.html#executable-code",
    "href": "materials/02-presentations/slides.html#executable-code",
    "title": "Presentations with reveal.js",
    "section": "Executable code",
    "text": "Executable code\n\nlibrary(ggplot2)\nggplot(mtcars, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\")\n\n\n\nLearn more: Executable Code\n\n\nOne of the most powerful features of Quarto is the ability to include executable code directly in your presentation. The code is run, and the output‚Äîwhether it‚Äôs a plot, a table, or just text‚Äîis displayed on the slide. This is great for live demonstrations or for ensuring your examples are always up-to-date."
  },
  {
    "objectID": "materials/02-presentations/slides.html#latex-equations",
    "href": "materials/02-presentations/slides.html#latex-equations",
    "title": "Presentations with reveal.js",
    "section": "LaTeX equations",
    "text": "LaTeX equations\nMathJax rendering of equations to HTML\n\n\n\\begin{gather*}\na_1=b_1+c_1\\\\\na_2=b_2+c_2-d_2+e_2\n\\end{gather*}\n\n\\begin{align}\na_{11}& =b_{11}&\n  a_{12}& =b_{12}\\\\\na_{21}& =b_{21}&\n  a_{22}& =b_{22}+c_{22}\n\\end{align}\n\n\\[\\begin{gather*}\na_1=b_1+c_1\\\\\na_2=b_2+c_2-d_2+e_2\n\\end{gather*}\\]\n\\[\\begin{align}\na_{11}& =b_{11}&\n  a_{12}& =b_{12}\\\\\na_{21}& =b_{21}&\n  a_{22}& =b_{22}+c_{22}\n\\end{align}\\]\n\n\nLearn more: LaTeX Equations\n\n\nIf your work involves math or science, you‚Äôll be happy to know that Quarto has excellent support for LaTeX equations."
  },
  {
    "objectID": "materials/02-presentations/slides.html#incremental-lists",
    "href": "materials/02-presentations/slides.html#incremental-lists",
    "title": "Presentations with reveal.js",
    "section": "Incremental lists",
    "text": "Incremental lists\nLists can optionally be displayed incrementally:\n\nFirst item\nSecond item\nThird item\n\n\n Insert pauses to make other types of content display incrementally.\n\nLearn more: Incremental Lists\n\n\nTo avoid overwhelming your audience with too much information at once, you can display lists incrementally. Items will appear one by one as you advance the slide, keeping your audience‚Äôs attention focused on the current point. You can also use a simple ‚Ä¶ to insert pauses between content."
  },
  {
    "objectID": "materials/02-presentations/slides.html#incremental-lists-1",
    "href": "materials/02-presentations/slides.html#incremental-lists-1",
    "title": "Presentations with reveal.js",
    "section": "Incremental lists",
    "text": "Incremental lists\nLists can optionally be displayed incrementally:\n::: incremental\n-   First item\n-   Second item\n-   Third item\n:::\n\n. . .\n\n&lt;br/&gt; Insert pauses to make other types of content display incrementally."
  },
  {
    "objectID": "materials/02-presentations/slides.html#fragments",
    "href": "materials/02-presentations/slides.html#fragments",
    "title": "Presentations with reveal.js",
    "section": "Fragments",
    "text": "Fragments\nIncremental text display and animation with fragments:\n\n\nFade in\n\n\nSlide up while fading in\n\n\nSlide left while fading in\n\n\nFade in then semi out\n\n\n\nStrike\n\n\nHighlight red\n\n\nLearn more: Fragments\n\n\nFragments are a more advanced form of incremental display. They allow you to apply different animation effects to your content. You can make things fade in, slide up, or even highlight in different colors. This gives you a lot of control over how your information is revealed."
  },
  {
    "objectID": "materials/02-presentations/slides.html#fragments-1",
    "href": "materials/02-presentations/slides.html#fragments-1",
    "title": "Presentations with reveal.js",
    "section": "Fragments",
    "text": "Fragments\n::: {.fragment .fade-in}\nFade in\n:::\n\n::: {.fragment .fade-up}\nSlide up while fading in\n:::\n\n::: {.fragment .fade-left}\nSlide left while fading in\n:::\n\n::: {.fragment .fade-in-then-semi-out}\nFade in then semi out\n:::\n\n. . .\n\n::: {.fragment .strike}\nStrike\n:::\n\n::: {.fragment .highlight-red}\nHighlight red\n:::"
  },
  {
    "objectID": "materials/02-presentations/slides.html#absolute-position",
    "href": "materials/02-presentations/slides.html#absolute-position",
    "title": "Presentations with reveal.js",
    "section": "Absolute position",
    "text": "Absolute position\nPosition images or other elements at precise locations\n\n\n\n\nLearn more: Absolute Position\n\n\nFor precise placement of elements, you can use absolute positioning. You can place images or text at a specific distance from the top, bottom, left, or right of the slide. This is great for creating unique layouts and collages."
  },
  {
    "objectID": "materials/02-presentations/slides.html#absolute-position-1",
    "href": "materials/02-presentations/slides.html#absolute-position-1",
    "title": "Presentations with reveal.js",
    "section": "Absolute position",
    "text": "Absolute position\n![](images/kitten-400-350.jpeg){.absolute top=\"170\" left=\"30\" width=\"400\" height=\"400\"}\n\n![](images/kitten-450-250.jpeg){.absolute .fragment top=\"150\" right=\"80\" width=\"450\"}\n\n![](images/kitten-300-200.jpeg){.absolute .fragment bottom=\"110\" right=\"130\" width=\"300\"}"
  },
  {
    "objectID": "materials/02-presentations/slides.html#interactive-slides",
    "href": "materials/02-presentations/slides.html#interactive-slides",
    "title": "Presentations with reveal.js",
    "section": "Interactive slides",
    "text": "Interactive slides\nInclude Jupyter widgets and htmlwidgets in your presentations\n\n```{r}\n#| fig-height: 5\nlibrary(leaflet)\nleaflet() %&gt;%\n  addTiles() %&gt;%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=174.768, lat=-36.852, popup=\"The birthplace of R\")\n```\n\n\n\n\n\n\nLearn more: Jupyter widgets, htmlwidgets\n\n\nQuarto makes it easy to include interactive content in your presentations. For example, you can embed Jupyter widgets or htmlwidgets, like this interactive Leaflet map. This makes your presentations more engaging and allows your audience to explore data on their own."
  },
  {
    "objectID": "materials/02-presentations/slides.html#interactive-slides-1",
    "href": "materials/02-presentations/slides.html#interactive-slides-1",
    "title": "Presentations with reveal.js",
    "section": "Interactive slides",
    "text": "Interactive slides\nAdd executable R or Python chunks into your slides:\n\n\n\n\n\n\n\n\n\nLearn more: Quartolive"
  },
  {
    "objectID": "materials/02-presentations/slides.html#interactive-slides-2",
    "href": "materials/02-presentations/slides.html#interactive-slides-2",
    "title": "Presentations with reveal.js",
    "section": "Interactive slides",
    "text": "Interactive slides\nAdd Shinylive applications into your slides:\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 500\n\nlibrary(shiny)\nlibrary(bslib)\n\n# Define UI for app that draws a histogram ----\nui &lt;- page_sidebar(\n  sidebar = sidebar(open = \"open\",\n    numericInput(\"n\", \"Sample count\", 100),\n    checkboxInput(\"pause\", \"Pause\", FALSE),\n  ),\n  plotOutput(\"plot\", width=1100)\n)\n\nserver &lt;- function(input, output, session) {\n  data &lt;- reactive({\n    input$resample\n    if (!isTRUE(input$pause)) {\n      invalidateLater(1000)\n    }\n    rnorm(input$n)\n  })\n  \n  output$plot &lt;- renderPlot({\n    hist(data(),\n      breaks = 40,\n      xlim = c(-2, 2),\n      ylim = c(0, 1),\n      lty = \"blank\",\n      xlab = \"value\",\n      freq = FALSE,\n      main = \"\"\n    )\n    \n    x &lt;- seq(from = -2, to = 2, length.out = 500)\n    y &lt;- dnorm(x)\n    lines(x, y, lwd=1.5)\n    \n    lwd &lt;- 5\n    abline(v=0, col=\"red\", lwd=lwd, lty=2)\n    abline(v=mean(data()), col=\"blue\", lwd=lwd, lty=1)\n\n    legend(legend = c(\"Normal\", \"Mean\", \"Sample mean\"),\n      col = c(\"black\", \"red\", \"blue\"),\n      lty = c(1, 2, 1),\n      lwd = c(1, lwd, lwd),\n      x = 1,\n      y = 0.9\n    )\n  }, res=140)\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n\nLearn more: Shinylive"
  },
  {
    "objectID": "materials/02-presentations/slides.html#your-turn-1",
    "href": "materials/02-presentations/slides.html#your-turn-1",
    "title": "Presentations with reveal.js",
    "section": "Your turn",
    "text": "Your turn\n\nAdd {.smaller} to your heading to decrease its font size, like this: ## Global Happiness Trends {.smaller}.\nPlace your plot and table side-by-side. Adjust the percentages as needed.\nUse ::: panel-tabset on the ‚ÄúCountry-Level Analysis‚Äù slide to organize your content.\nTo improve the flow, add slide-transition: slide to your YAML header. Other options include fade, convex, concave, or zoom.\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "materials/02-presentations/slides.html#easy-navigation",
    "href": "materials/02-presentations/slides.html#easy-navigation",
    "title": "Presentations with reveal.js",
    "section": "Easy navigation",
    "text": "Easy navigation\n\nQuickly jump to other parts of your presentation\n\n\n\n\n\n\n\nToggle the slide menu with the menu button (bottom left of slide) to go to other slides and access presentation tools.\n\n\n\nYou can also press mm to toggle the menu open and closed.\n\nLearn more: Navigation"
  },
  {
    "objectID": "materials/02-presentations/slides.html#jump-to-slide",
    "href": "materials/02-presentations/slides.html#jump-to-slide",
    "title": "Presentations with reveal.js",
    "section": "Jump to slide",
    "text": "Jump to slide\nYou can also press gg to toggle ‚ÄòJump To Slide‚Äô modal box to quickly go to one of your slide using its number or id.\n\nLearn more: Jump To Slide"
  },
  {
    "objectID": "materials/02-presentations/slides.html#chalkboard",
    "href": "materials/02-presentations/slides.html#chalkboard",
    "title": "Presentations with reveal.js",
    "section": "Chalkboard",
    "text": "Chalkboard\nEnable by adding:\nformat:\n  revealjs:\n    chalkboard: true\n\n\n\n\n\n\n\nUse the chalkboard button at the bottom left of the slide to toggle the chalkboard.\n\n\n\n\n\n\n\n\n\nUse the notes canvas button at the bottom left of the slide to toggle drawing on top of the current slide.\n\n\n\nYou can also press bb to toggle the chalkboard or cc to toggle the notes canvas.\n\nLearn more: Chalkboard"
  },
  {
    "objectID": "materials/02-presentations/slides.html#point-of-view",
    "href": "materials/02-presentations/slides.html#point-of-view",
    "title": "Presentations with reveal.js",
    "section": "Point of view",
    "text": "Point of view\npress oo to toggle overview mode:\n\nHold down the AltAlt/OptionOption and click on any element to zoom towards it‚Äîtry it now on this slide.\n\nLearn more: Overview Mode, Slide Zoom"
  },
  {
    "objectID": "materials/02-presentations/slides.html#preview-links",
    "href": "materials/02-presentations/slides.html#preview-links",
    "title": "Presentations with reveal.js",
    "section": "Preview links",
    "text": "Preview links\nNavigate to hyperlinks without disrupting the flow of your presentation.\nUse the preview-links option to open links in an iframe on top of your slides. Try clicking the link below for a demonstration:\n\nMatplotlib: Visualization with Python\n\n\nLearn more: Preview Links"
  },
  {
    "objectID": "materials/02-presentations/slides.html#speaker-view",
    "href": "materials/02-presentations/slides.html#speaker-view",
    "title": "Presentations with reveal.js",
    "section": "Speaker view",
    "text": "Speaker view\npress ss (or use the tools in presentation menu ) to open speaker view\n## Slide with speaker notes\n\nSlide content\n\n::: {.notes}\nSpeaker notes go here.\n:::\n\nSpeaker notes go here.\n\n\nLearn more: Speaker View"
  },
  {
    "objectID": "materials/02-presentations/slides.html#themes",
    "href": "materials/02-presentations/slides.html#themes",
    "title": "Presentations with reveal.js",
    "section": "Themes",
    "text": "Themes\n10 built-in themes also apply to reveal.js:\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Themes"
  },
  {
    "objectID": "materials/02-presentations/slides.html#reveal.js-with-brand.yml",
    "href": "materials/02-presentations/slides.html#reveal.js-with-brand.yml",
    "title": "Presentations with reveal.js",
    "section": "reveal.js with brand.yml",
    "text": "reveal.js with brand.yml\nThe _brand.yml file in the root directory of your project will automatically apply the brand to your revealjs documents."
  },
  {
    "objectID": "materials/02-presentations/slides.html#title-slide-background",
    "href": "materials/02-presentations/slides.html#title-slide-background",
    "title": "Presentations with reveal.js",
    "section": "Title slide background",
    "text": "Title slide background\nAdd a custom background to the title slide using the title-slide-attributes key:\n---\nformat: revealjs\ntitle-slide-attributes:\n    data-background-image: images/milky-way.jpeg\n    data-background-size: cover\n---\n\nLearn more: Custom Background"
  },
  {
    "objectID": "materials/02-presentations/slides.html#slide-backgrounds",
    "href": "materials/02-presentations/slides.html#slide-backgrounds",
    "title": "Presentations with reveal.js",
    "section": "Slide backgrounds",
    "text": "Slide backgrounds\nSet the background attribute on a slide to change the background color (all CSS color formats are supported).\nUse {{&lt; brand color COLOR_NAME BRAND_MODE &gt;}} to return the brand color named COLOR_NAME as a string.\n---\nformat: revealjs\n---\n\n## Slide Title {background-color='{{&lt; brand color primary &gt;}}'}\n\nLearn more: Slide Backgrounds"
  },
  {
    "objectID": "materials/02-presentations/slides.html#media-backgrounds",
    "href": "materials/02-presentations/slides.html#media-backgrounds",
    "title": "Presentations with reveal.js",
    "section": "Media backgrounds",
    "text": "Media backgrounds\nYou can also use the following as a slide background:\n\nAn image: background-image\nA video: background-video\nAn iframe: background-iframe"
  },
  {
    "objectID": "materials/02-presentations/slides.html#and-more",
    "href": "materials/02-presentations/slides.html#and-more",
    "title": "Presentations with reveal.js",
    "section": "And more‚Ä¶",
    "text": "And more‚Ä¶\n\nTouch optimized (presentations look great on mobile, swipe to navigate slides)\nFooter & Logo (optionally specify custom footer per-slide or hide global footer)\nAuto-Slide (step through slides automatically, without any user input)\nMultiplex (allows your audience to follow the slides of the presentation you are controlling on their own phone, tablet or laptop).\n\n\nLearn more: Quarto Presentations"
  },
  {
    "objectID": "materials/02-presentations/slides.html#your-turn-2",
    "href": "materials/02-presentations/slides.html#your-turn-2",
    "title": "Presentations with reveal.js",
    "section": "Your turn",
    "text": "Your turn\n\nChange the title slide background.\n\nFind an image on Unsplash and get the direct URL to the image file.\nAdd title-slide-attributes to your YAML header and specify the data-background-image attribute with the image‚Äôs URL.\nIf it‚Äôs a dark photo, you may want to change data-background-color to a dark color so that the slide uses a light font color.\n\nEdit Conclusion slide background color: Use the brand.yml shortcodes to change the color to primary.\n\n\n\n\n‚àí+\n10:00"
  },
  {
    "objectID": "materials/02-presentations/exercise-03.html",
    "href": "materials/02-presentations/exercise-03.html",
    "title": "",
    "section": "",
    "text": "Change the title slide background.\n\nFind an image on Unsplash and get the direct URL to the image file.\nAdd title-slide-attributes to your YAML header and specify the data-background-image attribute with the image‚Äôs URL.\nIf it‚Äôs a dark photo, you may want to change data-background-color to a dark color so that the slide uses a light font color.\n\nEdit Conclusion slide background color: Use the brand.yml shortcodes to change the color to primary."
  },
  {
    "objectID": "materials/02-presentations/exercise-01.html",
    "href": "materials/02-presentations/exercise-01.html",
    "title": "",
    "section": "",
    "text": "In your document‚Äôs YAML header, change format: html to format: revealjs.\nUse first-level headings (#) to create a new slide. Use other Markdown headings and text for content on each slide.\nSave and render your document.\n\nQuarto will create an HTML file that is a fully functional slide deck.\n\n\n\n\n\n\nNote\n\n\n\nYou can remove code-fold and code-summary from the YAML header, as these are for HTML documents and do not apply to presentations."
  }
]